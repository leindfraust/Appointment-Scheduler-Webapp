{"version":3,"file":"js/955.c82b0c21.js","mappings":"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","sources":["webpack://client/./src/components/ForgotPassword.vue","webpack://client/./src/components/ForgotPassword.vue?4972","webpack://client/./src/components/ManagerMenu.vue","webpack://client/./src/components/ManagerMenu.vue?67dd","webpack://client/./src/views/PortalSuperUsers/ManagerSecurity.vue","webpack://client/./src/views/PortalSuperUsers/ManagerSecurity.vue?1604"],"sourcesContent":["<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport axios from 'axios';\r\n\r\nlet isLoading = ref(false)\r\nlet errMsg = ref('')\r\nlet modal = ref(false)\r\nlet emailExists = ref(false)\r\nlet code = ref('')\r\nlet codeSent = ref(false)\r\nlet codeVerified = ref(false)\r\nlet codeIncorrect = ref(false)\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet passwordNotMatch = ref(false)\r\nlet passwordChanged = ref(false)\r\nlet noUserFound = ref(false)\r\nlet userData = ref('')\r\nlet usernameHandler = ref(props.username)\r\nlet emailHandler = ref(props.email)\r\nconst props = defineProps({\r\n    userType: String,\r\n    username: String,\r\n    email: String,\r\n    forgotPasswordPromptCount: {\r\n        type: Number,\r\n        default: 0\r\n    }\r\n});\r\nconst forgotPasswordPromptCountLimit = ref(2)\r\nconst forgotPasswordPromptCount = computed(() => props.forgotPasswordPromptCount)\r\nasync function forgotPasswordOTP() {\r\n    if (usernameHandler.value != null || emailHandler.value != null) {\r\n        isLoading.value = true\r\n        let confirmEmail\r\n        await axios.post('/api/code/email', {\r\n            email: emailHandler.value\r\n        }).then(response => confirmEmail = response.data)\r\n        if (confirmEmail) {\r\n            emailExists.value = true\r\n        } else {\r\n            emailExists.value = false\r\n            if (props.userType == 'patient') {\r\n                await axios.post('/api/user/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'doctor') {\r\n                await axios.post('/api/doctor/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'manager') {\r\n                await axios.post('/api/manager/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            }\r\n        }\r\n        isLoading.value = false\r\n    }\r\n}\r\nasync function verifyCode() {\r\n    let confirmCode\r\n    codeIncorrect.value = false\r\n    codeVerified.value = false\r\n    await axios.post('/api/code/verify', {\r\n        code: code.value\r\n    }).then(response => confirmCode = response.data)\r\n    if (confirmCode) {\r\n        codeVerified.value = true\r\n    } else {\r\n        codeIncorrect.value = true\r\n    }\r\n}\r\nasync function pushNewPassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        if (props.userType == 'patient') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/patient', {\r\n                    patientID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'doctor') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/doctor', {\r\n                    doctorID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'manager') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/manager', {\r\n                    managerID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        }\r\n    } else {\r\n        passwordNotMatch.value = true\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <a class=\"help has-text-danger\" @click=\"modal = !modal\"\r\n        v-if=\"forgotPasswordPromptCount >= forgotPasswordPromptCountLimit\">Forgot Password</a>\r\n    <div class=\"modal\" :class=\"{ 'is-active': modal }\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content has-text-left\" style=\"width: 40%; margin: auto\">\r\n            <section class=\"section box\" v-if=\"!codeSent\">\r\n                <p class=\"title is-4 has-text-danger\">Forgot Password</p>\r\n                <div class=\"notification is-danger\" v-if=\"errMsg\">{{ errMsg }}</div>\r\n                <div class=\"notification is-warning\" v-if=\"noUserFound\">No account has been found linked with this\r\n                    email.</div>\r\n                <div class=\"container\" v-if=\"!emailExists\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Username</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"usernameHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Email</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"emailHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" :class=\"{ 'is-loading': isLoading }\" @click=\"forgotPasswordOTP\"\r\n                                :disabled=\"emailHandler == null || usernameHandler == null\">Send OTP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification is-danger\" v-else>You have to wait 10 minutes before requesting a code again.\r\n                </div>\r\n            </section>\r\n            <section class=\"section box\" v-else>\r\n                <div class=\"container\" v-if=\"!codeVerified\">\r\n                    <div class=\"notification is-warning\" v-if=\"codeIncorrect\">Incorrect code, please try again.</div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter code</label>\r\n                            <input class=\"input\" type=\"number\" v-model=\"code\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" @click=\"verifyCode\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\" v-else>\r\n                    <div class=\"notification is-danger\" v-if=\"passwordNotMatch\">Passwords not match.</div>\r\n                    <div class=\"container\" v-if=\"!passwordChanged\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">New Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"newPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">Confirm Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"confirmPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <button class=\"button\" @click=\"pushNewPassword\"\r\n                                    :disabled=\"newPassword == '' && confirmPassword == ''\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"container\" v-else>\r\n                        <div class=\"notification is-success\">Your password has been successfully changed.</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" @click=\"modal = false\"></button>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .modal-content {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import script from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=3decfc24&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3decfc24\"]])\n\nexport default __exports__","<template>\r\n    <nav class=\"navbar is-hidden-desktop\">\r\n        <div class=\"navbar-brand\">\r\n            <a role=\"button\" class=\"navbar-burger\" :class=\"{ 'is-active': !isActive }\" aria-label=\"menu\"\r\n                aria-expanded=\"false\" data-target=\"navbar\" @click=\"menuNav\">\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n            </a>\r\n        </div>\r\n    </nav>\r\n    <aside class=\"menu box\" :class=\"{ 'is-hidden-mobile': isActive, 'fixedMenu': isActive }\"\r\n        style=\"background-color: white; padding: 20px; height: 100vh\">\r\n        <p class=\"menu-label\">General</p>\r\n        <ul class=\"menu-list\">\r\n            <li>\r\n                <a @click=\"navDoctors\">Dashboard</a>\r\n            </li>\r\n            <li>\r\n                <a @click=\"navProfile\">Profile</a>\r\n            </li>\r\n        </ul>\r\n        <p class=\"menu-label\">Security</p>\r\n        <ul class=\"menu-list\">\r\n            <li>\r\n                <a @click=\"navChangePass\">Registration and Password</a>\r\n            </li>\r\n        </ul>\r\n        <p class=\"menu-label\">Support</p>\r\n        <ul class=\"menu-list\">\r\n            <li>\r\n                <a @click=\"this.$router.push('/contactus')\">Contact Us</a>\r\n            </li>\r\n        </ul>\r\n        <hr />\r\n        <button class=\"button is-danger\" @click=\"logout\">Logout</button>\r\n    </aside>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'ManagerMenu',\r\n    data() {\r\n        return {\r\n            isActive: true,\r\n            managerHospital: ''\r\n        }\r\n    },\r\n    async mounted() {\r\n        await axios.get('/session/manager').then(response => this.managerHospital = response.data.hospital)\r\n    },\r\n    methods: {\r\n        async logout() {\r\n            await axios.delete('/session/manager');\r\n            await this.$store.commit(\"managerHospital\", null);\r\n            await this.$router.push(\"/manager/login\");\r\n        },\r\n        menuNav() {\r\n            this.isActive = !this.isActive\r\n        },\r\n        navProfile() {\r\n            this.$router.push(`/manager/${this.managerHospital}/profile`);\r\n        },\r\n        navDoctors() {\r\n            this.$router.push(`/manager/${this.managerHospital}`)\r\n        },\r\n        navChangePass() {\r\n            this.$router.push(`/manager/${this.managerHospital}/security`)\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.fixedMenu {\r\n    position: fixed;\r\n}\r\n</style>","import { render } from \"./ManagerMenu.vue?vue&type=template&id=0e6fe468\"\nimport script from \"./ManagerMenu.vue?vue&type=script&lang=js\"\nexport * from \"./ManagerMenu.vue?vue&type=script&lang=js\"\n\nimport \"./ManagerMenu.vue?vue&type=style&index=0&id=0e6fe468&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\r\nimport axios from 'axios'\r\nimport { ref, onMounted } from 'vue'\r\nimport ManagerMenu from '../../components/ManagerMenu.vue';\r\nimport ForgotPassword from '../../components/ForgotPassword.vue';\r\n\r\nlet currentPassword = ref('')\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet passwordNotMatched = ref(false)\r\nlet managerID = ref('')\r\nlet errMsg = ref('')\r\nlet passwordChanged = ref(false)\r\nlet incorrectCurrentPassword = ref(false)\r\nlet registrationCode = ref('')\r\n\r\nonMounted(async () => {\r\n    await axios.get('/session/manager').then(response => managerID.value = response.data._id)\r\n    await axios.get('/session/manager').then(response => registrationCode.value = response.data.registrationCode)\r\n});\r\n\r\n//methods\r\n\r\nfunction generateCode() {\r\n    let result = '';\r\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let charactersLength = characters.length;\r\n    for (let i = 0; i < 8; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() *\r\n            charactersLength));\r\n    }\r\n    registrationCode.value = result.toUpperCase()\r\n}\r\n\r\nasync function updateRegistrationCode() {\r\n    generateCode()\r\n    try {\r\n        await axios.put(`/api/manager/${managerID.value}`, {\r\n            registrationCode: registrationCode.value\r\n        });\r\n        await axios.put('/session/manager', {\r\n            registrationCode: registrationCode.value\r\n        });\r\n    } catch (err) {\r\n        errMsg.value = err\r\n    }\r\n}\r\n\r\nfunction showPassword() {\r\n    let passwordToggle = document.getElementsByClassName(\"password\");\r\n    for (let i = 0; i < passwordToggle.length; i++) {\r\n        if (passwordToggle[i].type === \"password\") {\r\n            passwordToggle[i].type = \"text\";\r\n        } else {\r\n            passwordToggle[i].type = \"password\";\r\n        }\r\n    }\r\n}\r\n\r\nasync function changePassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        await axios.put('/api/updatePassword/manager', {\r\n            managerID: managerID.value,\r\n            currentPassword: currentPassword.value,\r\n            newPassword: newPassword.value\r\n        }).then(response => {\r\n            if (response.data) {\r\n                incorrectCurrentPassword.value = false\r\n                currentPassword.value = ''\r\n                newPassword.value = ''\r\n                confirmPassword.value = ''\r\n                passwordChanged.value = true\r\n                errMsg.value = ''\r\n                passwordNotMatched.value = false\r\n            } else {\r\n                passwordChanged.value = false\r\n                incorrectCurrentPassword.value = true\r\n            }\r\n        }).catch(err => {\r\n            errMsg.value = err\r\n            passwordChanged.value = false\r\n        })\r\n    } else {\r\n        passwordNotMatched.value = true\r\n        passwordChanged.value = false\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <div class=\"columns\">\r\n        <div class=\"column is-2\">\r\n            <ManagerMenu />\r\n        </div>\r\n        <div class=\"column\">\r\n            <section class=\"section\">\r\n                <div class=\"container box\">\r\n                    <label class=\"label\">Registration Code</label>\r\n                    <div class=\"field has-addons\">\r\n                        <div class=\"control\">\r\n                            <input class=\"input\" type=\"text\" v-model=\"registrationCode\" />\r\n                        </div>\r\n                        <div class=\"control\">\r\n                            <a class=\"button\" @click=\"updateRegistrationCode\"><i\r\n                                    class=\"fa-solid fa-arrows-rotate\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"notification is-success\" v-if=\"passwordChanged\">Password has been changed successfully.\r\n                    </div>\r\n                    <div class=\"notification is-danger\" v-if=\"errMsg\"> {{ errMsg }}</div>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Current Password</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"password\" class=\"input password\" v-model=\"currentPassword\"\r\n                                placeholder=\"Current password\">\r\n                        </div>\r\n                        <p class=\"help is-danger\" v-if=\"incorrectCurrentPassword\">Current password does not match in our\r\n                            database.</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">New Password</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"password\" class=\"input password\" v-model=\"newPassword\"\r\n                                placeholder=\"New password\">\r\n                        </div>\r\n                        <p class=\"help is-danger\" v-if=\"passwordNotMatched\">Password do not match.</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Confirm Password</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"password\" class=\"input password\" v-model=\"confirmPassword\"\r\n                                placeholder=\"Confirm password\">\r\n                        </div>\r\n                        <p class=\"help is-danger\" v-if=\"passwordNotMatched\">Password do not match.</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"checkbox\">\r\n                                <input type=\"checkbox\" @click=\"showPassword\" />\r\n                                Show password\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field has-text-right\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button is-danger\"\r\n                                :disabled=\"currentPassword == '' || newPassword == '' || confirmPassword == ''\"\r\n                                @click=\"changePassword\">Change password</button>\r\n                        </div>\r\n                    </div>\r\n                    <ForgotPassword :userType=\"'manager'\" />\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</template>","import script from \"./ManagerSecurity.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManagerSecurity.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["isLoading","ref","errMsg","modal","emailExists","code","codeSent","codeVerified","codeIncorrect","newPassword","confirmPassword","passwordNotMatch","passwordChanged","noUserFound","userData","usernameHandler","props","username","emailHandler","email","forgotPasswordPromptCountLimit","forgotPasswordPromptCount","computed","async","forgotPasswordOTP","value","confirmEmail","axios","then","response","data","userType","err","verifyCode","confirmCode","pushNewPassword","patientID","_id","password","doctorID","managerID","__exports__","class","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_1","_hoisted_2","role","$data","onClick","$options","style","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","$router","push","_hoisted_13","name","isActive","managerHospital","this","hospital","methods","$store","commit","menuNav","navProfile","navDoctors","navChangePass","render","currentPassword","passwordNotMatched","incorrectCurrentPassword","registrationCode","generateCode","result","characters","charactersLength","length","i","charAt","Math","floor","random","toUpperCase","updateRegistrationCode","showPassword","passwordToggle","document","getElementsByClassName","type","changePassword","catch","onMounted"],"sourceRoot":""}