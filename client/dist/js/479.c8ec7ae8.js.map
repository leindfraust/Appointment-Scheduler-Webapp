{"version":3,"file":"js/479.c8ec7ae8.js","mappings":"2pDAIA,IAAIA,GAAYC,EAAAA,EAAAA,KAAI,GAChBC,GAASD,EAAAA,EAAAA,IAAI,IACbE,GAAQF,EAAAA,EAAAA,KAAI,GACZG,GAAcH,EAAAA,EAAAA,KAAI,GAClBI,GAAOJ,EAAAA,EAAAA,IAAI,IACXK,GAAWL,EAAAA,EAAAA,KAAI,GACfM,GAAeN,EAAAA,EAAAA,KAAI,GACnBO,GAAcP,EAAAA,EAAAA,IAAI,IAClBQ,GAAkBR,EAAAA,EAAAA,IAAI,IACtBS,GAAmBT,EAAAA,EAAAA,KAAI,GACvBU,GAAkBV,EAAAA,EAAAA,KAAI,GACtBW,IAAcX,EAAAA,EAAAA,KAAI,GAClBY,IAAWZ,EAAAA,EAAAA,IAAI,IACfa,IAAkBb,EAAAA,EAAAA,IAAIc,EAAMC,UAC5BC,IAAehB,EAAAA,EAAAA,IAAIc,EAAMG,OAO7BC,eAAeC,KACX,GAA6B,MAAzBN,GAAgBO,OAAuC,MAAtBJ,GAAaI,MAAe,CAE7D,IAAIC,EAIJ,GALAtB,EAAUqB,OAAQ,QAEZE,IAAAA,KAAW,kBAAmB,CAChCL,MAAOD,GAAaI,QACrBG,MAAKC,GAAYH,EAAeG,EAASC,OACxCJ,EACAlB,EAAYiB,OAAQ,OAGpB,GADAjB,EAAYiB,OAAQ,EACE,WAAlBN,EAAMY,SAKN,SAJMJ,IAAAA,KAAW,4BAA6B,CAC1CP,SAAUF,GAAgBO,MAC1BH,MAAOD,GAAaI,QACrBG,MAAKC,GAAYZ,GAASQ,MAAQI,EAASC,OAC1Cb,GAASQ,MAAO,CAChBT,GAAYS,OAAQ,EACpB,UACUE,IAAAA,KAAW,eAAgB,CAC7BL,MAAOD,GAAaI,QACrBG,KAAKlB,EAASe,OAAQ,GACzBf,EAASe,OAAQ,CAGpB,CAFC,MAAOO,GACL1B,EAAOmB,MAAQO,CAClB,CACJ,MACGhB,GAAYS,OAAQ,OAErB,GAAsB,UAAlBN,EAAMY,SAKb,SAJMJ,IAAAA,KAAW,8BAA+B,CAC5CP,SAAUF,GAAgBO,MAC1BH,MAAOD,GAAaI,QACrBG,MAAKC,GAAYZ,GAASQ,MAAQI,EAASC,OAC1Cb,GAASQ,MAAO,CAChBT,GAAYS,OAAQ,EACpB,UACUE,IAAAA,KAAW,eAAgB,CAC7BL,MAAOD,GAAaI,QACrBG,KAAKlB,EAASe,OAAQ,GACzBf,EAASe,OAAQ,CAGpB,CAFC,MAAOO,GACL1B,EAAOmB,MAAQO,CAClB,CACJ,MACGhB,GAAYS,OAAQ,OAErB,GAAsB,WAAlBN,EAAMY,SAKb,SAJMJ,IAAAA,KAAW,+BAAgC,CAC7CP,SAAUF,GAAgBO,MAC1BH,MAAOD,GAAaI,QACrBG,MAAKC,GAAYZ,GAASQ,MAAQI,EAASC,OAC1Cb,GAASQ,MAAO,CAChBT,GAAYS,OAAQ,EACpB,UACUE,IAAAA,KAAW,eAAgB,CAC7BL,MAAOD,GAAaI,QACrBG,KAAKlB,EAASe,OAAQ,GACzBf,EAASe,OAAQ,CAGpB,CAFC,MAAOO,GACL1B,EAAOmB,MAAQO,CAClB,CACJ,MACGhB,GAAYS,OAAQ,EAIhCrB,EAAUqB,OAAQ,CACrB,CACJ,CACDF,eAAeU,KACX,IAAIC,EACJvB,EAAac,OAAQ,QACfE,IAAAA,KAAW,mBAAoB,CACjClB,KAAMA,EAAKgB,QACZG,MAAKC,GAAYK,EAAcL,EAASC,OACvCI,IACAvB,EAAac,OAAQ,EAE5B,CACDF,eAAeY,KACX,GAAIvB,EAAYa,QAAUZ,EAAgBY,OACtC,GAAsB,WAAlBN,EAAMY,SACN,UACUJ,IAAAA,IAAU,+BAAgC,CAC5CS,UAAWnB,GAASQ,MAAMY,IAC1BC,SAAU1B,EAAYa,QAE1BR,GAASQ,MAAQ,GACjBV,EAAgBU,OAAQ,CAK3B,CAJC,MAAOO,GACLjB,EAAgBU,OAAQ,EACxBnB,EAAOmB,MAAQO,EACff,GAASQ,MAAQ,EACpB,MACE,GAAsB,UAAlBN,EAAMY,SACb,UACUJ,IAAAA,IAAU,8BAA+B,CAC3CY,SAAUtB,GAASQ,MAAMY,IACzBC,SAAU1B,EAAYa,QAE1BR,GAASQ,MAAQ,GACjBV,EAAgBU,OAAQ,CAK3B,CAJC,MAAOO,GACLjB,EAAgBU,OAAQ,EACxBnB,EAAOmB,MAAQO,EACff,GAASQ,MAAQ,EACpB,MACE,GAAsB,WAAlBN,EAAMY,SACb,UACUJ,IAAAA,IAAU,+BAAgC,CAC5Ca,UAAWvB,GAASQ,MAAMY,IAC1BC,SAAU1B,EAAYa,QAE1BR,GAASQ,MAAQ,GACjBV,EAAgBU,OAAQ,CAK3B,CAJC,MAAOO,GACLjB,EAAgBU,OAAQ,EACxBnB,EAAOmB,MAAQO,EACff,GAASQ,MAAQ,EACpB,OAGLX,EAAiBW,OAAQ,CAEhC,C,47EChJD,MAAMgB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,qKCPaC,MAAM,qBAAqBC,MAAA,mC,GAC3BD,MAAM,a,GACFA,MAAM,+B,GACFA,MAAM,yC,SACJA,MAAM,2B,GAEJA,MAAM,MAAMC,MAAA,6B,GACRD,MAAM,W,GACDA,MAAM,QAAQC,MAAA,qB,UAChBC,EAAAA,EAAAA,GAA4B,MAAxBF,MAAM,SAAQ,SAAK,K,GAClBA,MAAM,W,GAINA,MAAM,UAAUC,MAAA,qB,SAIOD,MAAM,kBAAkBC,MAAA,qB,SAGVD,MAAM,kBAC5CC,MAAA,qB,UAEJC,EAAAA,EAAAA,GAAM,qB,UACNA,EAAAA,EAAAA,GAAyB,MAArBF,MAAM,SAAQ,MAAE,K,6EAzBhDG,EAAAA,EAAAA,IAkCU,UAlCV,EAkCU,EAjCND,EAAAA,EAAAA,GAgCM,MAhCN,EAgCM,EA/BFA,EAAAA,EAAAA,GA8BM,MA9BN,EA8BM,EA7BFA,EAAAA,EAAAA,GA4BM,MA5BN,EA4BM,CA3BuCE,EAAAA,aAAAA,EAAAA,EAAAA,OAAzCD,EAAAA,EAAAA,IAC0C,IAD1C,EAAqD,mFAArD,gBAEAD,EAAAA,EAAAA,GAwBM,MAxBN,EAwBM,EAvBFA,EAAAA,EAAAA,GAqBM,MArBN,EAqBM,EApBFA,EAAAA,EAAAA,GAmBO,OAnBP,EAmBO,CAlBHG,GACAH,EAAAA,EAAAA,GAGM,MAHN,EAGM,WAFFA,EAAAA,EAAAA,GAC2B,SADpBF,MAAM,QAAQM,KAAK,O,qCAAgBF,EAAAA,SAAQG,GAAEC,YAAY,WAAWC,SAAA,GACtEC,QAAK,8BAAQC,EAAAA,OAAAA,EAAAA,SAAAA,IAAK,aADvB,iBAA0CP,EAAAA,eAG9CF,EAAAA,EAAAA,GAGM,MAHN,EAGM,WAFFA,EAAAA,EAAAA,GACoC,SAD7BF,MAAM,QAAQM,KAAK,W,qCAAoBF,EAAAA,SAAQG,GAAEC,YAAY,WAChEC,SAAA,GAAUC,QAAK,8BAAQC,EAAAA,OAAAA,EAAAA,SAAAA,IAAK,aADhC,iBAA8CP,EAAAA,cAGzCA,EAAAA,oBAAAA,EAAAA,EAAAA,OAATD,EAAAA,EAAAA,IAEM,IAFN,GAEMS,EAAAA,EAAAA,IADER,EAAAA,iBAAe,IAEQ,GAAjBA,EAAAA,oBAAiB,WAA/BD,EAAAA,EAAAA,IACoD,IADpD,GACoDS,EAAAA,EAAAA,IAAtBR,EAAAA,iBAAe,KAD7C,gBAEAF,EAAAA,EAAAA,GAA6E,UAArEI,KAAK,SAASN,MAAM,oBAAqBa,QAAK,oBAAEF,EAAAA,OAAAA,EAAAA,SAAAA,KAAO,SAC/DG,EACAC,GACAb,EAAAA,EAAAA,GAA0D,KAAtDW,QAAK,oBAAEF,EAAAA,QAAAA,EAAAA,UAAAA,IAAQX,MAAM,aAAY,0BAG7CgB,EAAAA,EAAAA,IAAwCC,EAAA,CAAvB5B,SAAU,qB,kCAYnD,GACI6B,KAAM,eACNC,UAAWC,EAAAA,WACXhC,OACI,MAAO,CACHV,SAAU,GACVkB,SAAU,GACVyB,YAAa,KACbC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAY,EAEnB,EACD3C,gBAC4C,GAApC4C,KAAKC,OAAOC,MAAMC,iBAClBH,KAAKD,YAAa,QACZC,KAAKC,OAAOG,OAAO,kBAAkB,IAEL,OAAtCJ,KAAKC,OAAOC,MAAMG,uBACZL,KAAKM,QAAQC,KAAM,iBAAgBP,KAAKC,OAAOC,MAAMG,kBAElE,EACDG,QAAS,CACLpD,cACyB,MAAjB4C,KAAK/C,UAAqC,MAAjB+C,KAAK7B,UAC9B6B,KAAKH,mBAAoB,EACzBG,KAAKF,gBAAkB,6BACvBE,KAAK/C,SAAW,KAChB+C,KAAK7B,SAAW,YAGVX,IAAAA,KACI,oBAAqB,CACvBP,SAAU+C,KAAK/C,SACfkB,SAAU6B,KAAK7B,WAElBV,MAAKL,UACF4C,KAAKJ,YAAclC,EAASC,WAElBqC,KAAKJ,mBACLpC,IAAAA,KAAW,mBAAoB,CACjCU,IAAK8B,KAAKJ,YAAY1B,IACtBuC,iBAAkBT,KAAKJ,YAAYa,iBACnCC,SAAUV,KAAKJ,YAAYc,WAE/BV,KAAKC,OAAOG,OAAO,kBAAmBJ,KAAKJ,YAAYc,gBACjDV,KAAKM,QAAQC,KAAM,iBAAgBP,KAAKJ,YAAYc,cAG1DV,KAAKF,gBAAkB,iCACvBE,KAAKH,mBAAoB,EACzBG,KAAK/C,SAAW,KAChB+C,KAAK7B,SAAW,KACpB,GAGf,EACDf,qBACU4C,KAAKM,QAAQC,KAAK,uBAC5B,GAEJI,WAAY,CAAEhB,eAAcA,EAAAA,a,UChGhC,MAAMrB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASsC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://client/./src/components/ForgotPassword.vue","webpack://client/./src/components/ForgotPassword.vue?4972","webpack://client/./src/views/PortalSuperUsers/ManagerLogin.vue","webpack://client/./src/views/PortalSuperUsers/ManagerLogin.vue?0a86"],"sourcesContent":["<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios';\r\n\r\nlet isLoading = ref(false)\r\nlet errMsg = ref('')\r\nlet modal = ref(false)\r\nlet emailExists = ref(false)\r\nlet code = ref('')\r\nlet codeSent = ref(false)\r\nlet codeVerified = ref(false)\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet passwordNotMatch = ref(false)\r\nlet passwordChanged = ref(false)\r\nlet noUserFound = ref(false)\r\nlet userData = ref('')\r\nlet usernameHandler = ref(props.username)\r\nlet emailHandler = ref(props.email)\r\nconst props = defineProps({\r\n    userType: String,\r\n    username: String,\r\n    email: String\r\n});\r\n\r\nasync function forgotPasswordOTP() {\r\n    if (usernameHandler.value != null || emailHandler.value != null) {\r\n        isLoading.value = true\r\n        let confirmEmail\r\n        await axios.post('/api/code/email', {\r\n            email: emailHandler.value\r\n        }).then(response => confirmEmail = response.data)\r\n        if (confirmEmail) {\r\n            emailExists.value = true\r\n        } else {\r\n            emailExists.value = false\r\n            if (props.userType == 'patient') {\r\n                await axios.post('/api/user/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'doctor') {\r\n                await axios.post('/api/doctor/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'manager') {\r\n                await axios.post('/api/manager/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            }\r\n        }\r\n        isLoading.value = false\r\n    }\r\n}\r\nasync function verifyCode() {\r\n    let confirmCode\r\n    codeVerified.value = false\r\n    await axios.post('/api/code/verify', {\r\n        code: code.value\r\n    }).then(response => confirmCode = response.data)\r\n    if (confirmCode) {\r\n        codeVerified.value = true\r\n    }\r\n}\r\nasync function pushNewPassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        if (props.userType == 'patient') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/patient', {\r\n                    patientID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'doctor') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/doctor', {\r\n                    doctorID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'manager') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/manager', {\r\n                    managerID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        }\r\n    } else {\r\n        passwordNotMatch.value = true\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <a class=\"subtitle has-text-danger\" @click=\"modal = !modal\">Forgot Password</a>\r\n    <div class=\"modal\" :class=\"{ 'is-active': modal }\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content has-text-left\" style=\"width: 40%; margin: auto\">\r\n            <section class=\"section box\" v-if=\"!codeSent\">\r\n                <p class=\"title is-4 has-text-danger\">Forgot Password</p>\r\n                <div class=\"notification is-danger\" v-if=\"errMsg\">{{ errMsg }}</div>\r\n                <div class=\"notification is-warning\" v-if=\"noUserFound\">No account has been found linked with this\r\n                    email.</div>\r\n                <div class=\"container\" v-if=\"!emailExists\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Username</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"usernameHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Email</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"emailHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" :class=\"{ 'is-loading': isLoading }\" @click=\"forgotPasswordOTP\"\r\n                                :disabled=\"emailHandler == null || usernameHandler == null\">Send OTP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification is-danger\" v-else>You have to wait 10 minutes before requesting a code again.\r\n                </div>\r\n            </section>\r\n            <section class=\"section box\" v-else>\r\n                <div class=\"container\" v-if=\"!codeVerified\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter code</label>\r\n                            <input class=\"input\" type=\"number\" v-model=\"code\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" @click=\"verifyCode\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\" v-else>\r\n                    <div class=\"notification is-danger\" v-if=\"passwordNotMatch\">Passwords not match.</div>\r\n                    <div class=\"container\" v-if=\"!passwordChanged\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">New Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"newPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">Confirm Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"confirmPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <button class=\"button\" @click=\"pushNewPassword\"\r\n                                    :disabled=\"newPassword == '' && confirmPassword == ''\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"container\" v-else>\r\n                        <div class=\"notification is-success\">Your password has been successfully changed.</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" @click=\"modal = false\"></button>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .modal-content {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import script from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=c2f9401e&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c2f9401e\"]])\n\nexport default __exports__","<template>\r\n    <section class=\"hero is-fullheight\" style=\"background-color: whitesmoke;\">\r\n        <div class=\"hero-body\">\r\n            <div class=\"container has-text-centered\">\r\n                <div class=\"animate__animated animate__fadeInLeft\">\r\n                    <p class=\"notification is-success\" v-if=\"newAccount\">The account has been successfully created,\r\n                        login to activate the account now.</p>\r\n                    <div class=\"box\" style=\"width: 33%; margin: auto\">\r\n                        <div class=\"content\">\r\n                            <form class=\"field\" style=\"margin-top: 5%\">\r\n                                <h1 class=\"title\">Login</h1>\r\n                                <div class=\"control\">\r\n                                    <input class=\"input\" type=\"text\" v-model=\"username\" placeholder=\"username\" required\r\n                                        @keyup.enter=\"login\" />\r\n                                </div>\r\n                                <div class=\"control\" style=\"margin-top: 2%\">\r\n                                    <input class=\"input\" type=\"password\" v-model=\"password\" placeholder=\"password\"\r\n                                        required @keyup.enter=\"login\" />\r\n                                </div>\r\n                                <p v-if=\"incorrectUserPass\" class=\"has-text-danger\" style=\"margin-top: 5%\">{{\r\n                                        validateMessage\r\n                                }}</p>\r\n                                <p v-else-if=\"incorrectUserPass == false\" class=\"has-text-danger\"\r\n                                    style=\"margin-top: 5%\">{{ validateMessage }}</p>\r\n                                <button type=\"button\" class=\"button is-primary\" @click=\"login\">Login</button>\r\n                                <hr />\r\n                                <h1 class=\"title\">Or</h1>\r\n                                <a @click=\"signup\" class=\"is-danger\">Create an account</a>\r\n                            </form>\r\n                        </div>\r\n                        <ForgotPassword :userType=\"'manager'\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport ForgotPassword from '../../components/ForgotPassword.vue'\r\n\r\nexport default {\r\n    name: \"ManagerLogin\",\r\n    component: ForgotPassword,\r\n    data() {\r\n        return {\r\n            username: \"\",\r\n            password: \"\",\r\n            userManager: null,\r\n            incorrectUserPass: \"\",\r\n            validateMessage: \"\",\r\n            newAccount: false\r\n        };\r\n    },\r\n    async mounted() {\r\n        if (this.$store.state.accountCreated == true) {\r\n            this.newAccount = true;\r\n            await this.$store.commit(\"accountCreated\", false);\r\n        }\r\n        if (this.$store.state.managerHospital !== null) {\r\n            await this.$router.push(`/user/manager/${this.$store.state.managerHospital}`);\r\n        }\r\n    },\r\n    methods: {\r\n        async login() {\r\n            if (this.username == null || this.password == null) {\r\n                this.incorrectUserPass = false;\r\n                this.validateMessage = \"empty username or password\";\r\n                this.username = null\r\n                this.password = null\r\n            }\r\n            else {\r\n                await axios\r\n                    .post(\"/api/auth/manager\", {\r\n                        username: this.username,\r\n                        password: this.password\r\n                    })\r\n                    .then(async (response) => {\r\n                        this.userManager = response.data\r\n                        // if username and password matched to a user\r\n                        if (await this.userManager) {\r\n                            await axios.post(\"/session/manager\", {\r\n                                _id: this.userManager._id,\r\n                                registrationCode: this.userManager.registrationCode,\r\n                                hospital: this.userManager.hospital\r\n                            });\r\n                            this.$store.commit(\"managerHospital\", this.userManager.hospital);\r\n                            await this.$router.push(`/user/manager/${this.userManager.hospital}`);\r\n                        }\r\n                        else {\r\n                            this.validateMessage = \"Incorrect username or password\";\r\n                            this.incorrectUserPass = true;\r\n                            this.username = null;\r\n                            this.password = null;\r\n                        }\r\n                    });\r\n            }\r\n        },\r\n        async signup() {\r\n            await this.$router.push(\"/user/manager/signup\");\r\n        }\r\n    },\r\n    components: { ForgotPassword }\r\n}\r\n</script>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .box {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import { render } from \"./ManagerLogin.vue?vue&type=template&id=5bb54140&scoped=true\"\nimport script from \"./ManagerLogin.vue?vue&type=script&lang=js\"\nexport * from \"./ManagerLogin.vue?vue&type=script&lang=js\"\n\nimport \"./ManagerLogin.vue?vue&type=style&index=0&id=5bb54140&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5bb54140\"]])\n\nexport default __exports__"],"names":["isLoading","ref","errMsg","modal","emailExists","code","codeSent","codeVerified","newPassword","confirmPassword","passwordNotMatch","passwordChanged","noUserFound","userData","usernameHandler","props","username","emailHandler","email","async","forgotPasswordOTP","value","confirmEmail","axios","then","response","data","userType","err","verifyCode","confirmCode","pushNewPassword","patientID","_id","password","doctorID","managerID","__exports__","class","style","_createElementVNode","_createElementBlock","$data","_hoisted_9","type","$event","placeholder","required","onKeyup","$options","_toDisplayString","onClick","_hoisted_14","_hoisted_15","_createVNode","_component_ForgotPassword","name","component","ForgotPassword","userManager","incorrectUserPass","validateMessage","newAccount","this","$store","state","accountCreated","commit","managerHospital","$router","push","methods","registrationCode","hospital","components","render"],"sourceRoot":""}