{"version":3,"file":"js/456.d2d2d8ab.js","mappings":"8RAOMA,GAASC,EAAAA,EAAAA,KAAS,IAAMC,EAAMF,S,iUCJpC,MAAMG,EAAc,EAEpB,O,yoECGA,MAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAETT,GAASU,EAAAA,EAAAA,IAAI,IACbC,GAAkBD,EAAAA,EAAAA,IAAI,IACtBE,GAAiBF,EAAAA,EAAAA,IAAI,MACrBG,GAAaH,EAAAA,EAAAA,IAAI,MACjBI,IAAiBJ,EAAAA,EAAAA,IAAI,IACrBK,IAAmBL,EAAAA,EAAAA,IAAI,MACvBM,IAAwBN,EAAAA,EAAAA,KAAI,GAC5BO,IAAkBP,EAAAA,EAAAA,IAAI,IACtBQ,IAAkBR,EAAAA,EAAAA,KAAI,GACtBS,IAAaT,EAAAA,EAAAA,KAAI,GACjBU,IAAiBV,EAAAA,EAAAA,IAAIN,EAAMiB,MAAMD,iBAEvCE,EAAAA,EAAAA,KAAUC,UACsB,OAA1BnB,EAAMiB,MAAMG,iBACRC,EAAAA,EAAAA,IACC,oBACJC,MAAKC,GAAYf,EAAegB,MAAQD,EAASE,aAEhDJ,EAAAA,EAAAA,KAAY,gBAAenB,EAAMwB,OAAOC,YAAYL,MAAKC,IAC7DhB,EAAgBiB,MAAQD,EAASE,KACjCf,GAAec,MAAQD,EAASE,KAAKG,gBAAgBC,MAAM,IAE3B,UAA9BtB,EAAgBiB,MAAMM,OACxBf,GAAWS,OAAQ,EACnBO,QAAWC,UAEHhB,GAAeQ,MAAMS,wBACvBF,GAAWf,GAAeQ,MAAMS,iBACxC,KAGFC,EAAAA,EAAAA,KAAY,KACVlC,EAAMmC,OAAO,iBAAkB,CAAC,EAAE,IAGpC,MAAMC,IAAevC,EAAAA,EAAAA,KAAS,MACxBY,EAAWe,OACNf,EAAWe,MAAMa,QAAOC,GAAKA,EAAEC,KAAKC,cAAcC,SAAS5B,GAAgBW,MAAMgB,iBAAgBE,QAAQb,MAAK,CAACc,EAAGC,IAAMD,EAAEE,OAASD,EAAEC,WAMhJ1B,eAAeY,GAAWe,GACxBjC,GAAgBW,MAAQ,GACxBV,GAAgBU,OAAQ,EACxBZ,GAAsBY,OAAQ,EAC9Bb,GAAiBa,MAAQsB,QACnBzB,EAAAA,EAAAA,KAAW,+BAAgC,CAC/CM,SAAUpB,EAAgBiB,MAAMG,SAChCoB,WAAYD,EACZE,WAAYhC,GAAeQ,MAAMyB,gBACjCC,WAAYlC,GAAeQ,MAAM2B,kBAChC7B,MAAKC,GAAuBd,EAAWe,MAAtBD,EAA8BA,EAASE,KAA0B,KAAI2B,OAAMC,GAAOzD,EAAO4B,MAAQ6B,IACrHvC,GAAgBU,OAAQ,CAC1B,CACAL,eAAemC,GAAWC,EAAST,GACjC9C,EAAMmC,OAAO,uBAAwBW,GACrC9C,EAAMmC,OAAO,gBAAiBoB,GAC9BvD,EAAMmC,OAAO,sBAAsB,GACnCnC,EAAMmC,OAAO,eAAgB5B,EAAgBiB,MAAMG,UACrB,OAA1B3B,EAAMiB,MAAMG,gBACRhB,EAAOoD,KAAM,SAAQhD,EAAegB,MAAMiC,+BAE1CrD,EAAOoD,KAAK,eAEtB,C,i2HCxEA,MAAMzD,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://client/./src/components/CatchError.vue","webpack://client/./src/components/CatchError.vue?d490","webpack://client/./src/views/Public/DoctorList.vue","webpack://client/./src/views/Public/DoctorList.vue?7020"],"sourcesContent":["<script setup>\r\nimport { computed } from 'vue'\r\n\r\nconst props = defineProps({\r\n    errMsg: null\r\n});\r\n\r\nconst errMsg = computed(() => props.errMsg)\r\n</script>\r\n<template>\r\n    <div class=\"notification is-danger\" v-if=\"errMsg\">Sorry, something went wrong. {{ errMsg.message }}, please\r\n        try again later or\r\n        <router-link :to=\"'/contactus'\">contact us</router-link>.\r\n    </div>\r\n</template>","import script from \"./CatchError.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CatchError.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { ref, onMounted, onUnmounted, computed } from 'vue'\r\nimport axios from \"axios\";\r\nimport NavigationTab from \"../../components/NavigationTab.vue\";\r\nimport CatchError from \"../../components/CatchError.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nconst store = useStore()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n\r\nconst errMsg = ref('')\r\nconst hospitalDetails = ref([])\r\nconst patientDetails = ref(null)\r\nconst doctorList = ref(null)\r\nconst specialistList = ref([])\r\nconst pickedSpecialist = ref(null)\r\nconst specializationClicked = ref(false)\r\nconst doctorSearchBar = ref('')\r\nconst isDoctorLoading = ref(false)\r\nconst typeClinic = ref(false)\r\nconst patientFilters = ref(store.state.patientFilters)\r\n\r\nonMounted(async () => {\r\n  if (store.state.patientID !== null) {\r\n    await axios\r\n      .get(\"/session/patient\")\r\n      .then(response => patientDetails.value = response.data);\r\n  }\r\n  await axios.post(`/api/manager/${route.params.hospital}`).then(response => {\r\n    hospitalDetails.value = response.data\r\n    specialistList.value = response.data.specializations.sort()\r\n  });\r\n  if (hospitalDetails.value.type == 'Clinic') {\r\n    typeClinic.value = true\r\n    getDoctors(undefined)\r\n  }\r\n  if (await patientFilters.value.filterSpecialist) {\r\n    await getDoctors(patientFilters.value.filterSpecialist)\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  store.commit(\"patientFilters\", {})\r\n})\r\n\r\nconst doctorSearch = computed(() => {\r\n  if (doctorList.value) {\r\n    return doctorList.value.filter(x => x.name.toLowerCase().includes(doctorSearchBar.value.toLowerCase())).slice().sort((a, b) => a.visits - b.visits)\r\n  } else {\r\n    return false\r\n  }\r\n})\r\n\r\nasync function getDoctors(specialization) {\r\n  doctorSearchBar.value = ''\r\n  isDoctorLoading.value = true\r\n  specializationClicked.value = true\r\n  pickedSpecialist.value = specialization;\r\n  await axios.post(\"/api/checkDoctorAvailability\", {\r\n    hospital: hospitalDetails.value.hospital,\r\n    specialist: specialization,\r\n    filterDate: patientFilters.value.filterDatevalue,\r\n    filterTime: patientFilters.value.filterTimevalue\r\n  }).then(response => response ? doctorList.value = response.data : doctorList.value = []).catch(err => errMsg.value = err)\r\n  isDoctorLoading.value = false\r\n}\r\nasync function pickDoctor(details, specialization) {\r\n  store.commit(\"pickedSpecialization\", specialization)\r\n  store.commit(\"doctorDetails\", details);\r\n  store.commit(\"statusAvailability\", true);\r\n  store.commit(\"hospitalName\", hospitalDetails.value.hospital);\r\n  if (store.state.patientID !== null) {\r\n    await router.push(`/user/${patientDetails.value.username}/registration`);\r\n  } else {\r\n    await router.push('/user/signup')\r\n  }\r\n}\r\n</script>\r\n<template>\r\n  <NavigationTab />\r\n  <div class=\"modal\" :class=\"{ 'is-active': isDoctorLoading }\">\r\n    <div class=\"modal-background\"></div>\r\n    <div class=\"modal-content\" style=\"overflow: hidden\">\r\n      <div class=\"loader\" style=\"margin: auto;\"></div>\r\n    </div>\r\n  </div>\r\n  <section class=\"section\" v-if=\"hospitalDetails.length !== 0\">\r\n    <CatchError :err-msg=\"errMsg\" />\r\n    <div class=\"columns\">\r\n      <div class=\"column\" id=\"hospital-overview\" style=\"border-right: 3px solid whitesmoke;\">\r\n        <div class=\"container is-fluid\">\r\n          <h1 class=\"title\">{{ hospitalDetails.hospital }}</h1>\r\n          <p class=\"subtitle\">{{ hospitalDetails.barangayORStreet }}, {{ hospitalDetails.city }}, {{\r\n            hospitalDetails.province\r\n          }}</p>\r\n          <p class=\"subtitle is-6\">{{ hospitalDetails.details[0].description }}</p>\r\n          <div class=\"content\">\r\n            <b>Type of Facility:</b> {{ hospitalDetails.type }}\r\n            <span v-if=\"typeof hospitalDetails.details[0].contacts !== 'undefined'\">\r\n              <p class=\"subtitle is-6\"><b>Contacts:</b> <span\r\n                  v-for=\"(contacts, index) in hospitalDetails.details[0].contacts\" :key=\"index\">\r\n                  {{ contacts.contact + ' ' }}</span></p>\r\n            </span>\r\n          </div>\r\n          <br />\r\n          <figure class=\"image is-16by9\">\r\n            <iframe class=\"has-ratio\"\r\n              :src=\"`https://maps.google.com/maps?q=${hospitalDetails.location.coordinates[1]},${hospitalDetails.location.coordinates[0]}&hl=es;z=14&amp;output=embed`\"></iframe>\r\n          </figure>\r\n        </div>\r\n      </div>\r\n      <div class=\"column\">\r\n        <div class=\"container\">\r\n          <div class=\"block\">\r\n            <div class=\"block\" v-if=\"!specializationClicked\">\r\n              <h1 class=\"title\">Pick a specialist.</h1>\r\n              <p class=\"subtitle\">\r\n                Having trouble picking a specialist? Get appointed to a\r\n                <a class=\"has-text-link\" @click=\"getDoctors('General Practitioner')\">General Practitioner</a>.\r\n              </p>\r\n            </div>\r\n            <div class=\"columns is-multiline is-mobile\" v-if=\"!specializationClicked\">\r\n              <div class=\"column is-6-mobile is-4-desktop\" v-for=\"(specialist, index) in specialistList\" :key=\"index\">\r\n                <a @click=\"getDoctors(specialist.specialist)\">\r\n                  <figure class=\"image is-4by3\" v-if=\"specialist.specialist !== 'General Practitioner'\">\r\n                    <img :src=\"`https://ui-avatars.com/api/?name=${specialist.specialist}`\r\n                    \" />\r\n                  </figure>\r\n                  <p class=\"subtitle has-text-centered\" v-if=\"specialist.specialist !== 'General Practitioner'\">{{\r\n                    specialist.specialist\r\n                  }}</p>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"container\" v-else>\r\n              <a class=\"subtitle has-text-link\" @click=\"specializationClicked = false\" v-if=\"!typeClinic\"><i\r\n                  class=\"fa-solid fa-arrow-left\"></i>\r\n                Back</a>\r\n              <div v-if=\"doctorList == ''\">\r\n                <br />\r\n                <p class=\"subtitle has-text-centered\">No doctors are currently available in this specialization.</p>\r\n              </div>\r\n              <div v-else>\r\n                <br />\r\n                <h1 class=\"title is-3\">Choose a doctor:</h1>\r\n                <div class=\"field\">\r\n                  <div class=\"control\">\r\n                    <input class=\"input\" type=\"text\" v-model=\"doctorSearchBar\" placeholder=\"Search...\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div v-if=\"specializationClicked\">\r\n                <div v-if=\"Object.keys(doctorSearch).length !== 0\">\r\n                  <div class=\"columns\" v-for=\"doctors in doctorSearch\" :key=\"doctors._id\">\r\n                    <div class=\"column\">\r\n                      <figure class=\"image is-square\">\r\n                        <img\r\n                          :src=\"`http://res.cloudinary.com/leindfraust/image/upload/v${new Date().getMonth()}${new Date().getDate()}/assets/doctors/${doctors.alias}.jpg`\" />\r\n                      </figure>\r\n                    </div>\r\n                    <div class=\"column is-5\">\r\n                      <div class=\"content\">\r\n                        <h5>{{ doctors.name }}</h5>\r\n                        <p><span class=\"has-text-weight-semibold\" v-if=\"pickedSpecialist\">{{\r\n                          pickedSpecialist\r\n                        }}</span>\r\n                          <span class=\"has-text-weight-semibold\" v-else><span v-for=\"specialist in doctors.specialist\"\r\n                              :key=\"specialist\">{{ specialist }} <br /></span></span>\r\n                          <br />\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"column\" style=\"margin-top: auto;\">\r\n                      <button class=\"button is-info is-rounded\" @click=\"pickDoctor(doctors, pickedSpecialist)\"\r\n                        v-if=\"$store.state.patientID !== null\">Book an\r\n                        Appointment</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"notification\" v-if=\"$store.state.patientID == null\">\r\n                    <router-link :to=\"'/account/login'\" class=\"has-text-weight-bold\">Login</router-link> or <router-link\r\n                      :to=\"'/user/signup'\" class=\"has-text-weight-bold\">create an\r\n                      account</router-link> to make an appointment.\r\n                  </div>\r\n                  <hr>\r\n                </div>\r\n                <div v-else>\r\n                  <div v-if=\"doctorList != ''\" class=\"notification is-info\">No such doctor is available right now.</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.section {\r\n  background-color: white;\r\n}\r\n\r\n.centered {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.doctorContainer {\r\n  width: 50% !important;\r\n}\r\n\r\n@media (max-width: 991.98px) {\r\n  .doctorContainer {\r\n    width: 97% !important;\r\n  }\r\n}\r\n\r\n.loader {\r\n  border: 7px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 7px solid gray;\r\n  border-bottom: 7px solid gray;\r\n  width: 60px;\r\n  height: 60px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n}\r\n\r\n@-webkit-keyframes spin {\r\n  0% {\r\n    -webkit-transform: rotate(0deg);\r\n  }\r\n\r\n  100% {\r\n    -webkit-transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@media (max-width: 991.98px) {\r\n  #notification {\r\n    width: 100% !important;\r\n  }\r\n\r\n  #hospital-overview {\r\n    padding: 0px !important;\r\n  }\r\n}\r\n</style>","import script from \"./DoctorList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DoctorList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DoctorList.vue?vue&type=style&index=0&id=3ab4f031&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3ab4f031\"]])\n\nexport default __exports__"],"names":["errMsg","computed","props","__exports__","store","useStore","route","useRoute","router","useRouter","ref","hospitalDetails","patientDetails","doctorList","specialistList","pickedSpecialist","specializationClicked","doctorSearchBar","isDoctorLoading","typeClinic","patientFilters","state","onMounted","async","patientID","axios","then","response","value","data","params","hospital","specializations","sort","type","getDoctors","undefined","filterSpecialist","onUnmounted","commit","doctorSearch","filter","x","name","toLowerCase","includes","slice","a","b","visits","specialization","specialist","filterDate","filterDatevalue","filterTime","filterTimevalue","catch","err","pickDoctor","details","push","username"],"sourceRoot":""}