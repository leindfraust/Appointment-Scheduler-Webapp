{"version":3,"file":"js/763.8cea61ef.js","mappings":"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","sources":["webpack://client/./src/components/FooterBlock.vue","webpack://client/./src/components/FooterBlock.vue?8c09","webpack://client/./src/views/Public/ProviderLoader.vue","webpack://client/./src/views/Public/ProviderLoader.vue?b19c"],"sourcesContent":["<template>\r\n    <footer class=\"footer\" style=\"background-color: white;\">\r\n        <div class=\"container is-fluid has-text-centered\">\r\n            <figure class=\"image\" style=\"margin: auto; width: 15%\">\r\n                <img src=\"../assets/images/logos/medi-search-horizontal.png\" />\r\n            </figure>\r\n            <div class=\"block\"></div>\r\n            <p class=\"subtitle is-6\">Medic Search is a capstone project proposal in <strong>La Consolacion\r\n                    College</strong> that is\r\n                developed\r\n                by Romel Jr Zerna, Mel Fatima Fernandez, Cloyde Catacutan and Gabriel Olmoguez. It is an online\r\n                platform\r\n                that allows patients to book their appointment online. Patients can search for doctors based on\r\n                their\r\n                location, specialty, and availability.</p>\r\n            <div class=\"block\"></div>\r\n            <nav class=\"breadcrumb is-centered\" aria-label=\"breadcrumbs\">\r\n                <ul>\r\n                    <li>\r\n                        <router-link :to=\"'/about'\">About Medic Search</router-link>\r\n                    </li>\r\n                    <li>\r\n                        <router-link :to=\"'/terms-and-conditions'\">Terms and Conditions</router-link>\r\n                    </li>\r\n                    <li>\r\n                        <router-link :to=\"'/contactus'\">Contact Us</router-link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div class=\"block\">\r\n                <strong>Copyright @2022-2023 Medic Search</strong>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"FooterPage\"\r\n}\r\n</script>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .image {\r\n        width: 75% ! important\r\n    }\r\n}\r\n</style>","import { render } from \"./FooterBlock.vue?vue&type=template&id=2c83e7d8&scoped=true\"\nimport script from \"./FooterBlock.vue?vue&type=script&lang=js\"\nexport * from \"./FooterBlock.vue?vue&type=script&lang=js\"\n\nimport \"./FooterBlock.vue?vue&type=style&index=0&id=2c83e7d8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2c83e7d8\"]])\n\nexport default __exports__","<script setup>\r\nimport axios from 'axios'\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport FooterBlock from '../../components/FooterBlock.vue'\r\nimport NavigationTab from '../../components/NavigationTab.vue'\r\n\r\nconst store = useStore()\r\nconst router = useRouter()\r\nconst route = useRoute()\r\n\r\nconst city = ref(\"\");\r\nconst isHospitalLoading = ref(false);\r\nconst hospital = ref(\"\");\r\nconst geolocation = ref([]);\r\nconst typeFilter = ref('');\r\nconst citiesOrMunicipalities = ref([]);\r\nconst hospitalQuery = ref('');\r\nconst province = ref(route.query.province);\r\nconst userLatitude = ref(route.query.userLat);\r\nconst userLongitude = ref(route.query.userLong);\r\nconst geoHospitalNearestUser = ref([]);\r\nconst specializations = ref(store.getters.getSpecializationList);\r\nconst filterSpecialist = ref(route.query.symptom);\r\nconst filterDate = ref(new Date(route.query.date));\r\nconst filterTime = ref(route.query.time);\r\nconst distanceFilter = ref(true);\r\nconst dateTimeFilter = ref(false);\r\nconst doctorSpecialistFilter = ref([]);\r\n\r\nconst geoHospitalNearestUserIndexed = computed(() => {\r\n    if (geoHospitalNearestUser.value) {\r\n        return geoHospitalNearestUser.value.slice().sort((a, b) => distanceFilter.value ? a.distance - b.distance : ((b.engagements / 10 + b.ratings * 2) * 1000 - b.distance) / 1000 - ((a.engagements / 10 + a.ratings * 2) * 1000 - a.distance) / 1000).filter(x => { return x.hospital.toLowerCase().includes(hospital.value.toLowerCase()); }).filter(x => x?.arrFilter > 0).filter(x => typeFilter.value == '' ? x.type == 'Private' || x.type == 'Public' || x.type == 'Clinic' : x.type == typeFilter.value).filter(x => x.city.includes(city.value)).slice().sort((a, b) => b.arrFilter - a.arrFilter);\r\n    } else {\r\n        return false;\r\n    }\r\n});\r\n\r\nonMounted(async () => {\r\n    await axios.get(\"/api/geolocation\").then(response => geolocation.value = response.data);\r\n    await loadProvider()\r\n})\r\n\r\nasync function unloadPropData(props) {\r\n    hospitalQuery.value = ''\r\n    if (geolocation.value.filter(prop => prop.province == props).length !== 0) {\r\n        province.value = props\r\n    } else {\r\n        hospitalQuery.value = props\r\n    }\r\n    await loadProvider()\r\n}\r\n\r\nasync function bookAppointment(hospitalDetails) {\r\n    const filters = {\r\n        filterSpecialist: filterSpecialist.value,\r\n        filterDate: filterDate.value,\r\n        filterTime: filterTime.value\r\n    }\r\n    store.commit(\"hospitalDetails\", hospitalDetails)\r\n    store.commit(\"patientFilters\", filters)\r\n    await axios.put(`/api/manager/${hospitalDetails._id}`, {\r\n        engagements: hospitalDetails.engagements + 1\r\n    });\r\n    await router.push(`/${hospitalDetails._id}/doctors`)\r\n}\r\n\r\nasync function loadProvider() {\r\n    isHospitalLoading.value = true;\r\n    if (await geolocation.value.find(x => x.province === province.value)) {\r\n        await router.push({\r\n            path: '/provider',\r\n            query: {\r\n                hospital: hospitalQuery.value,\r\n                province: province.value,\r\n                symptom: filterSpecialist.value,\r\n                userLat: userLatitude.value,\r\n                userLong: userLongitude.value,\r\n                date: new Date(filterDate.value).toLocaleDateString(),\r\n                time: filterTime.value\r\n            }\r\n        })\r\n        citiesOrMunicipalities.value = geolocation.value.find(x => x.province === province.value);\r\n        if (!hospitalQuery.value) {\r\n            hospitalQuery.value = ''\r\n        }\r\n        await axios.post(\"/api/geoFindHospitalNearestUser\", {\r\n            province: province.value,\r\n            hospitalQuery: hospitalQuery.value,\r\n            latitude: parseFloat(userLatitude.value),\r\n            longitude: parseFloat(userLongitude.value)\r\n        }).then(response => geoHospitalNearestUser.value = response.data);\r\n        document.getElementById('background').style.background = 'none'\r\n        await filterSpecialistDateTime()\r\n    }\r\n    isHospitalLoading.value = false;\r\n}\r\n\r\nasync function filterSpecialistDateTime() {\r\n    doctorSpecialistFilter.value = []\r\n    if (filterTime.value == undefined) {\r\n        filterTime.value = ''\r\n    }\r\n    await router.push({\r\n        path: '/provider',\r\n        query: {\r\n            hospital: hospitalQuery.value,\r\n            province: province.value,\r\n            symptom: filterSpecialist.value,\r\n            userLat: userLatitude.value,\r\n            userLong: userLongitude.value,\r\n            date: new Date(filterDate.value).toLocaleDateString(),\r\n            time: filterTime.value\r\n        }\r\n    })\r\n    const hospitals = geoHospitalNearestUser.value\r\n    for await (const hospital of hospitals) {\r\n        isHospitalLoading.value = true;\r\n        if (!hospitalQuery.value) {\r\n            hospitalQuery.value = ''\r\n        }\r\n        await axios.post(\"/api/doctor/filteration\", {\r\n            hospital: hospital.hospital,\r\n            filterSpecialist: filterSpecialist.value,\r\n            date: filterDate.value,\r\n            time: filterTime.value\r\n        }).then(async response => {\r\n            doctorSpecialistFilter.value.push({ hospital: hospital.hospital, docLength: response.data.filter((doctor) => filterSpecialist.value ? hospital.specializations.find(x => x.specialist === filterSpecialist.value) && doctor.hospitalOrigin.filter(x => x === hospital.hospital) : doctor.hospitalOrigin.filter(x => x === hospital.hospital)).length })\r\n            isHospitalLoading.value = false;\r\n        });\r\n    }\r\n    geoHospitalNearestUser.value.forEach(async (x) => x[\"arrFilter\"] = await doctorSpecialistFilter.value.find(e => x.hospital == e.hospital)?.docLength)\r\n}\r\n</script>\r\n<template>\r\n    <div id=\"background\">\r\n        <NavigationTab :provider-finder-mode=\"true\" :provider-provinces=\"geolocation\" :query=\"province\"\r\n            :provider-list=\"geoHospitalNearestUser\" @unload-prop-data=\"unloadPropData($event, arg)\" />\r\n        <div class=\"modal\" :class=\"{ 'is-active': isHospitalLoading }\">\r\n            <div class=\"modal-background\"></div>\r\n            <div class=\"modal-content\" style=\"overflow: hidden\">\r\n                <div class=\"loader\" style=\"margin: auto;\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal\" :class=\"{ 'is-active': dateTimeFilter }\">\r\n            <div class=\"modal-background\"></div>\r\n            <div class=\"modal-content\" style=\"overflow: auto\">\r\n                <div class=\"box\">\r\n                    <section class=\"section has-text-centered\">\r\n                        <label class=\"label\">Choose Preferred Date</label>\r\n                        <v-date-picker v-model=\"filterDate\" :min-date=\"new Date()\" is-expanded />\r\n                        <div class=\"block\"></div>\r\n                        <label class=\"label\">Choose Preferred Time(Optional) </label>\r\n                        <div class=\"buttons is-centered\">\r\n                            <button class=\"button\" :class=\"{ 'is-active': filterTime == 'AM' }\"\r\n                                @click=\"filterTime == 'AM' ? filterTime = '' : filterTime = 'AM'\">AM</button>\r\n                            <button class=\"button\" :class=\"{ 'is-active': filterTime == 'PM' }\"\r\n                                @click=\"filterTime == 'PM' ? filterTime = '' : filterTime = 'PM'\">PM</button>\r\n                        </div>\r\n\r\n                        <div class=\"block\"></div>\r\n                        <div class=\"buttons is-centered\">\r\n                            <button class=\"button\"\r\n                                @click=\"dateTimeFilter = false, filterTime = '', filterDate = undefined, filterSpecialistDateTime()\">Cancel</button>\r\n                            <button class=\"button is-info\" :disabled=\"filterDate == undefined\"\r\n                                @click=\"filterSpecialistDateTime(), dateTimeFilter = false\">Confirm</button>\r\n                        </div>\r\n\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"block\"></div>\r\n        <div class=\"is-hidden-desktop\" v-if=\"citiesOrMunicipalities != ''\">\r\n            <div class=\"columns is-mobile\" style=\"overflow: auto;\">\r\n                <div class=\"column is-narrow\">\r\n                    <div class=\"select is-rounded\">\r\n                        <select v-model=\"distanceFilter\">\r\n                            <option :value=\"false\">Sort by Recommended</option>\r\n                            <option :value=\"true\">Sort by Nearest</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-narrow\">\r\n                    <div class=\"select is-rounded\">\r\n                        <select v-model=\"city\">\r\n                            <option value=\"\" disabled>City/Municipality</option>\r\n                            <option value=\"\">Any</option>\r\n                            <option\r\n                                v-for=\"(cityorMunicipality, index) in citiesOrMunicipalities.citiesOrMunicipalities.sort((a, b) => { return a.name > b.name ? 1 : -1 })\"\r\n                                :key=\"index\">{{\r\n                                    cityorMunicipality.name.replace('City', '').replace('Municipality', '')\r\n                                }}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-narrow\">\r\n                    <div class=\"select is-rounded\">\r\n                        <select v-model=\"typeFilter\">\r\n                            <option :value=\"''\" disabled>Type of Facility</option>\r\n                            <option :value=\"''\">Any</option>\r\n                            <option value=\"Public\">Public Hospital</option>\r\n                            <option value=\"Private\">Private Hospital</option>\r\n                            <option value=\"Clinic\">Clinic</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-narrow\">\r\n                    <div class=\"select is-rounded\">\r\n                        <select v-model=\"filterSpecialist\" @change=\"filterSpecialistDateTime\">\r\n                            <option :value=\"undefined || ''\" disabled>Specialist</option>\r\n                            <option :value=\"undefined || ''\">Any</option>\r\n                            <option v-for=\"specialist in specializations\" :key=\"specialist\" :value=\"specialist\">{{\r\n                                specialist\r\n                            }}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-narrow\">\r\n                    <button class=\"button is-info\" @click=\"dateTimeFilter = true\">Date and Time</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container is-fluid\" v-if=\"citiesOrMunicipalities != ''\">\r\n            <div class=\"block\"></div>\r\n            <div class=\"columns\">\r\n                <div class=\"column is-2 has-text-centered-mobile is-hidden-mobile\"\r\n                    style=\"box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); clip-path: inset(0px -15px 0px 0px);\">\r\n                    <br />\r\n                    <div class=\"container\">\r\n                        <div class=\"block\">\r\n                            <div class=\"select\">\r\n                                <select v-model=\"distanceFilter\">\r\n                                    <option :value=\"true\">Sort by Nearest</option>\r\n                                    <option :value=\"false\">Sort by Recommended</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"block\">\r\n                            <div class=\"select\">\r\n                                <select v-model=\"city\">\r\n                                    <option value=\"\" disabled>City/Municipalit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </option>\r\n                                    <option value=\"\">Any</option>\r\n                                    <option\r\n                                        v-for=\"(cityorMunicipality, index) in citiesOrMunicipalities.citiesOrMunicipalities.sort((a, b) => { return a.name > b.name ? 1 : -1 })\"\r\n                                        :key=\"index\">{{\r\n                                            cityorMunicipality.name.replace('City', '').replace('Municipality', '')\r\n                                        }}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"block\">\r\n                            <div class=\"select\">\r\n                                <select v-model=\"typeFilter\">\r\n                                    <option :value=\"''\" disabled>Type of\r\n                                        Facility&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option :value=\"''\">Any</option>\r\n                                    <option value=\"Public\">Public Hospital</option>\r\n                                    <option value=\"Private\">Private Hospital</option>\r\n                                    <option value=\"Clinic\">Clinic</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"block\">\r\n                            <div class=\"select\">\r\n                                <select v-model=\"filterSpecialist\" @change=\"filterSpecialistDateTime\">\r\n                                    <option :value=\"undefined || ''\" disabled>Specialist</option>\r\n                                    <option :value=\"undefined || ''\">Any</option>\r\n                                    <option v-for=\"specialist in specializations\" :key=\"specialist\" :value=\"specialist\">\r\n                                        {{\r\n                                            specialist\r\n                                        }}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"block\">\r\n                            <button class=\"button is-info\" @click=\"dateTimeFilter = true\">Date and Time</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"column is-1 is-hidden-mobile\"></div>\r\n                <div class=\"column is-6\" v-if=\"geoHospitalNearestUser.length !== 0\">\r\n                    <br />\r\n                    <div class=\"container is-fluid\">\r\n                        <div class=\"columns is-centered has-text-left\" id=\"hospital\" style=\"margin-bottom: 7.5%;\"\r\n                            v-for=\"(geoHospital, index) in geoHospitalNearestUserIndexed\" :key=\"index\">\r\n                            <div class=\"column is-5\">\r\n                                <a @click=\"bookAppointment(geoHospital)\">\r\n                                    <figure class=\"image is-3by2 is-rounded\">\r\n                                        <img loading=\"lazy\" style=\"border-radius: 10px\"\r\n                                            :src=\"`https://res.cloudinary.com/leindfraust/image/upload/v${new Date().getMonth()}${new Date().getDate()}/assets/managers/${geoHospital.hospital}.jpg`\" />\r\n                                    </figure>\r\n                                </a>\r\n                            </div>\r\n                            <div class=\"column\">\r\n                                <div class=\"notification is-info is-light\"\r\n                                    v-if=\"(filterDate instanceof Date && !isNaN(filterDate) || filterSpecialist)\">\r\n                                    Available\r\n                                    for appointments</div>\r\n                                <a @click=\"bookAppointment(geoHospital)\">\r\n                                    <h1 class=\"title is-4\">{{ geoHospital.hospital }}</h1>\r\n                                    <p class=\"subtitle is-6\">{{ geoHospital.barangayORStreet }}, {{\r\n                                        geoHospital.city\r\n                                    }},\r\n                                        {{\r\n                                            geoHospital.province\r\n                                        }}</p>\r\n                                </a>\r\n                                <br>\r\n                                <div class=\"content\">\r\n                                    <b>Type of Facility:</b> {{ geoHospital.type }}\r\n                                    <span v-if=\"typeof geoHospital.details[0].contacts !== 'undefined'\">\r\n                                        <p class=\"subtitle is-6\"><b>Contacts:</b> <span\r\n                                                v-for=\"(contacts, index) in geoHospital.details[0].contacts\" :key=\"index\">\r\n                                                {{ contacts.contact + ' ' }}</span></p>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"column notification is-danger is-light has-text-centered\"\r\n                        v-if=\"geoHospitalNearestUserIndexed.length == 0\">\r\n                        Sorry, no doctors available.\r\n                    </div>\r\n                </div>\r\n                <div class=\"column notification is-danger is-light has-text-centered\" v-else-if=\"!isHospitalLoading\">\r\n                    No registered hospitals/clinics are found, please try again or search another province.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <FooterBlock />\r\n</template>\r\n<style scoped>\r\nselect {\r\n    border: 0px;\r\n    outline: 0px;\r\n}\r\n\r\n.select {\r\n    max-width: 12rem;\r\n}\r\n\r\n@media (max-width: 991.98px) {\r\n    #geoIframe {\r\n        width: 75vw;\r\n        height: 200px;\r\n    }\r\n\r\n    #background {\r\n        height: auto !important;\r\n    }\r\n\r\n    #notification-region {\r\n        width: 100% !important;\r\n    }\r\n\r\n    #location-prompt {\r\n        width: 100% !important;\r\n    }\r\n}\r\n\r\n#geoIframe {\r\n    position: relative;\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n#location-prompt {\r\n    width: 50%;\r\n    margin: auto;\r\n}\r\n\r\n#background {\r\n    background: no-repeat center url('../../assets/images/background-client.png');\r\n    background-size: cover;\r\n}\r\n\r\n.loader {\r\n    border: 7px solid #f3f3f3;\r\n    border-radius: 50%;\r\n    border-top: 7px solid gray;\r\n    border-bottom: 7px solid gray;\r\n    width: 60px;\r\n    height: 60px;\r\n    -webkit-animation: spin 2s linear infinite;\r\n    animation: spin 2s linear infinite;\r\n}\r\n\r\n@-webkit-keyframes spin {\r\n    0% {\r\n        -webkit-transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n        -webkit-transform: rotate(360deg);\r\n    }\r\n}\r\n\r\n@keyframes spin {\r\n    0% {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n\r\n@media (max-width: 991.98px) {\r\n    #notification {\r\n        width: 100% !important;\r\n    }\r\n\r\n    #hospital {\r\n        margin-bottom: 15% !important;\r\n    }\r\n}\r\n\r\n/* custom scrollbar */\r\n::-webkit-scrollbar {\r\n    width: 20px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n    background-color: transparent;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    background-color: #d6dee1;\r\n    border-radius: 20px;\r\n    border: 6px solid transparent;\r\n    background-clip: content-box;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n    background-color: #a8bbbf;\r\n}\r\n</style>","import script from \"./ProviderLoader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProviderLoader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProviderLoader.vue?vue&type=style&index=0&id=256d516a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-256d516a\"]])\n\nexport default __exports__"],"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_7","_createVNode","_component_router_link","to","_hoisted_8","name","__exports__","render","store","useStore","router","useRouter","route","useRoute","city","ref","isHospitalLoading","hospital","geolocation","typeFilter","citiesOrMunicipalities","hospitalQuery","province","query","userLatitude","userLat","userLongitude","userLong","geoHospitalNearestUser","specializations","getters","getSpecializationList","filterSpecialist","symptom","filterDate","Date","date","filterTime","time","distanceFilter","dateTimeFilter","doctorSpecialistFilter","geoHospitalNearestUserIndexed","computed","value","slice","sort","a","b","distance","engagements","ratings","filter","x","toLowerCase","includes","arrFilter","type","async","unloadPropData","props","prop","length","loadProvider","bookAppointment","hospitalDetails","filters","commit","axios","_id","push","find","path","toLocaleDateString","latitude","parseFloat","longitude","then","response","data","document","getElementById","background","filterSpecialistDateTime","undefined","hospitals","docLength","doctor","specialist","hospitalOrigin","forEach","e","onMounted"],"sourceRoot":""}