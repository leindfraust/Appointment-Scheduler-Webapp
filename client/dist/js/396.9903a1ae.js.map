{"version":3,"file":"js/396.9903a1ae.js","mappings":"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","sources":["webpack://client/./src/components/ForgotPassword.vue","webpack://client/./src/components/ForgotPassword.vue?4972","webpack://client/./src/views/PortalSuperUsers/ManagerLogin.vue","webpack://client/./src/views/PortalSuperUsers/ManagerLogin.vue?0a86"],"sourcesContent":["<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport axios from 'axios';\r\n\r\nlet isLoading = ref(false)\r\nlet errMsg = ref('')\r\nlet modal = ref(false)\r\nlet emailExists = ref(false)\r\nlet code = ref('')\r\nlet codeSent = ref(false)\r\nlet codeVerified = ref(false)\r\nlet codeIncorrect = ref(false)\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet passwordNotMatch = ref(false)\r\nlet passwordChanged = ref(false)\r\nlet noUserFound = ref(false)\r\nlet userData = ref('')\r\nlet usernameHandler = ref(props.username)\r\nlet emailHandler = ref(props.email)\r\nconst props = defineProps({\r\n    userType: String,\r\n    username: String,\r\n    email: String,\r\n    forgotPasswordPromptCount: {\r\n        type: Number,\r\n        default: 0\r\n    }\r\n});\r\nconst forgotPasswordPromptCountLimit = ref(2)\r\nconst forgotPasswordPromptCount = computed(() => props.forgotPasswordPromptCount)\r\nasync function forgotPasswordOTP() {\r\n    if (usernameHandler.value != null || emailHandler.value != null) {\r\n        isLoading.value = true\r\n        let confirmEmail\r\n        await axios.post('/api/code/email', {\r\n            email: emailHandler.value\r\n        }).then(response => confirmEmail = response.data)\r\n        if (confirmEmail) {\r\n            emailExists.value = true\r\n        } else {\r\n            emailExists.value = false\r\n            if (props.userType == 'patient') {\r\n                await axios.post('/api/user/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'doctor') {\r\n                await axios.post('/api/doctor/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'manager') {\r\n                await axios.post('/api/manager/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            }\r\n        }\r\n        isLoading.value = false\r\n    }\r\n}\r\nasync function verifyCode() {\r\n    let confirmCode\r\n    codeIncorrect.value = false\r\n    codeVerified.value = false\r\n    await axios.post('/api/code/verify', {\r\n        code: code.value\r\n    }).then(response => confirmCode = response.data)\r\n    if (confirmCode) {\r\n        codeVerified.value = true\r\n    } else {\r\n        codeIncorrect.value = true\r\n    }\r\n}\r\nasync function pushNewPassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        if (props.userType == 'patient') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/patient', {\r\n                    patientID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'doctor') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/doctor', {\r\n                    doctorID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'manager') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/manager', {\r\n                    managerID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        }\r\n    } else {\r\n        passwordNotMatch.value = true\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <a class=\"help has-text-danger\" @click=\"modal = !modal\"\r\n        v-if=\"forgotPasswordPromptCount >= forgotPasswordPromptCountLimit\">Forgot Password</a>\r\n    <div class=\"modal\" :class=\"{ 'is-active': modal }\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content has-text-left\" style=\"width: 40%; margin: auto\">\r\n            <section class=\"section box\" v-if=\"!codeSent\">\r\n                <p class=\"title is-4 has-text-danger\">Forgot Password</p>\r\n                <div class=\"notification is-danger\" v-if=\"errMsg\">{{ errMsg }}</div>\r\n                <div class=\"notification is-warning\" v-if=\"noUserFound\">No account has been found linked with this\r\n                    email.</div>\r\n                <div class=\"container\" v-if=\"!emailExists\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Username</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"usernameHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Email</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"emailHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" :class=\"{ 'is-loading': isLoading }\" @click=\"forgotPasswordOTP\"\r\n                                :disabled=\"emailHandler == null || usernameHandler == null\">Send OTP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification is-danger\" v-else>You have to wait 10 minutes before requesting a code again.\r\n                </div>\r\n            </section>\r\n            <section class=\"section box\" v-else>\r\n                <div class=\"container\" v-if=\"!codeVerified\">\r\n                    <div class=\"notification is-warning\" v-if=\"codeIncorrect\">Incorrect code, please try again.</div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter code</label>\r\n                            <input class=\"input\" type=\"number\" v-model=\"code\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" @click=\"verifyCode\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\" v-else>\r\n                    <div class=\"notification is-danger\" v-if=\"passwordNotMatch\">Passwords not match.</div>\r\n                    <div class=\"container\" v-if=\"!passwordChanged\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">New Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"newPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">Confirm Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"confirmPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <button class=\"button\" @click=\"pushNewPassword\"\r\n                                    :disabled=\"newPassword == '' && confirmPassword == ''\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"container\" v-else>\r\n                        <div class=\"notification is-success\">Your password has been successfully changed.</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" @click=\"modal = false\"></button>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .modal-content {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import script from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=3decfc24&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3decfc24\"]])\n\nexport default __exports__","<template>\r\n    <section class=\"hero is-fullheight\" style=\"background-color: whitesmoke;\">\r\n        <div class=\"hero-body\">\r\n            <div class=\"container has-text-centered\">\r\n                <div class=\"animate__animated animate__fadeInLeft\">\r\n                    <p class=\"notification is-success\" v-if=\"newAccount\">The account has been successfully created,\r\n                        login to activate the account now.</p>\r\n                    <div class=\"box\" style=\"width: 33%; margin: auto\">\r\n                        <div class=\"content\">\r\n                            <form class=\"field\" style=\"margin-top: 5%\">\r\n                                <h1 class=\"title\">Login</h1>\r\n                                <div class=\"control\">\r\n                                    <input class=\"input\" type=\"text\" v-model=\"username\" placeholder=\"username\" required\r\n                                        @keyup.enter=\"login\" />\r\n                                </div>\r\n                                <div class=\"control\" style=\"margin-top: 2%\">\r\n                                    <input class=\"input\" type=\"password\" v-model=\"password\" placeholder=\"password\"\r\n                                        required @keyup.enter=\"login\" />\r\n                                </div>\r\n                                <p v-if=\"incorrectUserPass\" class=\"has-text-danger\" style=\"margin-top: 5%\">{{\r\n                                        validateMessage\r\n                                }}</p>\r\n                                <p v-else-if=\"incorrectUserPass == false\" class=\"has-text-danger\"\r\n                                    style=\"margin-top: 5%\">{{ validateMessage }}</p>\r\n                                <button type=\"button\" class=\"button is-primary\" @click=\"login\">Login</button>\r\n                                <hr />\r\n                                <a @click=\"signup\" class=\"is-danger\">Create an account</a>\r\n                            </form>\r\n                        </div>\r\n                        <ForgotPassword :userType=\"'manager'\" :forgotPasswordPromptCount=\"forgotPasswordCount\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport ForgotPassword from '../../components/ForgotPassword.vue'\r\n\r\nexport default {\r\n    name: \"ManagerLogin\",\r\n    component: ForgotPassword,\r\n    data() {\r\n        return {\r\n            username: \"\",\r\n            password: \"\",\r\n            userManager: null,\r\n            incorrectUserPass: \"\",\r\n            validateMessage: \"\",\r\n            newAccount: false,\r\n            forgotPasswordCount: 0\r\n        };\r\n    },\r\n    async mounted() {\r\n        if (this.$store.state.accountCreated == true) {\r\n            this.newAccount = true;\r\n            await this.$store.commit(\"accountCreated\", false);\r\n        }\r\n    },\r\n    async beforeCreate() {\r\n        await axios.get(\"/session/manager\").then(async response => {\r\n            if (typeof response.data.hospital !== 'undefined') {\r\n                this.$store.commit(\"managerHospital\", response.data.hospital);\r\n                await this.$router.push(`/manager/${this.$store.state.managerHospital}`);\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        async login() {\r\n            if (this.username == null || this.password == null) {\r\n                this.incorrectUserPass = false;\r\n                this.validateMessage = \"empty username or password\";\r\n                this.username = null\r\n                this.password = null\r\n            }\r\n            else {\r\n                await axios\r\n                    .post(\"/api/auth/manager\", {\r\n                        username: this.username,\r\n                        password: this.password\r\n                    })\r\n                    .then(async (response) => {\r\n                        this.userManager = await response.data\r\n                        // if username and password matched to a user\r\n                        if (await this.userManager) {\r\n                            await axios.post(\"/session/manager\", {\r\n                                _id: this.userManager._id,\r\n                                registrationCode: this.userManager.registrationCode,\r\n                                hospital: this.userManager.hospital\r\n                            });\r\n                            this.$store.commit(\"managerHospital\", this.userManager.hospital);\r\n                            await this.$router.push(`/manager/${this.userManager.hospital}`);\r\n                        }\r\n                        else {\r\n                            this.forgotPasswordCount = this.forgotPasswordCount + 1\r\n                            this.validateMessage = \"Incorrect username or password\";\r\n                            this.incorrectUserPass = true;\r\n                            this.username = null;\r\n                            this.password = null;\r\n                        }\r\n                    });\r\n            }\r\n        },\r\n        async signup() {\r\n            await this.$router.push(\"/manager/signup\");\r\n        }\r\n    },\r\n    components: { ForgotPassword }\r\n}\r\n</script>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .box {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import { render } from \"./ManagerLogin.vue?vue&type=template&id=63362380&scoped=true\"\nimport script from \"./ManagerLogin.vue?vue&type=script&lang=js\"\nexport * from \"./ManagerLogin.vue?vue&type=script&lang=js\"\n\nimport \"./ManagerLogin.vue?vue&type=style&index=0&id=63362380&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63362380\"]])\n\nexport default __exports__"],"names":["isLoading","ref","errMsg","modal","emailExists","code","codeSent","codeVerified","codeIncorrect","newPassword","confirmPassword","passwordNotMatch","passwordChanged","noUserFound","userData","usernameHandler","props","username","emailHandler","email","forgotPasswordPromptCountLimit","forgotPasswordPromptCount","computed","async","forgotPasswordOTP","value","confirmEmail","axios","then","response","data","userType","err","verifyCode","confirmCode","pushNewPassword","patientID","_id","password","doctorID","managerID","__exports__","class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","$data","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","type","placeholder","required","onKeyup","$options","_hoisted_11","_hoisted_12","_hoisted_13","onClick","_hoisted_14","_createVNode","_component_ForgotPassword","name","component","ForgotPassword","userManager","incorrectUserPass","validateMessage","newAccount","forgotPasswordCount","this","$store","state","accountCreated","commit","hospital","$router","push","managerHospital","methods","registrationCode","components","render"],"sourceRoot":""}