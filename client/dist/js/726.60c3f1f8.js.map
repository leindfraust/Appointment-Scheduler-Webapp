{"version":3,"file":"js/726.60c3f1f8.js","mappings":"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","sources":["webpack://client/./src/components/ForgotPassword.vue","webpack://client/./src/components/ForgotPassword.vue?4972"],"sourcesContent":["<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport axios from 'axios';\r\n\r\nconst isLoading = ref(false)\r\nconst errMsg = ref('')\r\nconst modal = ref(false)\r\nconst emailExists = ref(false)\r\nconst code = ref('')\r\nconst codeSent = ref(false)\r\nconst codeVerified = ref(false)\r\nconst codeIncorrect = ref(false)\r\nconst newPassword = ref('')\r\nconst confirmPassword = ref('')\r\nconst passwordNotMatch = ref(false)\r\nconst passwordChanged = ref(false)\r\nconst noUserFound = ref(false)\r\nconst checkOTP = ref(false)\r\nconst userData = ref('')\r\nconst usernameHandler = ref(props.username)\r\nconst emailHandler = ref(props.email)\r\nconst userType = ref('')\r\nconst props = defineProps({\r\n    username: String,\r\n    email: String,\r\n    forgotPasswordPromptCount: {\r\n        type: Number,\r\n        default: 0\r\n    }\r\n});\r\nconst forgotPasswordPromptCountLimit = ref(2)\r\nconst forgotPasswordPromptCount = computed(() => props.forgotPasswordPromptCount)\r\n\r\nasync function getPatient() {\r\n    await axios.post('/api/user/verify_username', {\r\n        username: usernameHandler.value,\r\n        email: emailHandler.value,\r\n        forgotPassword: true\r\n    }).then(response => userData.value = response.data)\r\n    if (userData.value) {\r\n        noUserFound.value = false\r\n        try {\r\n            await axios.post('/api/OTPMail', {\r\n                email: emailHandler.value\r\n            }).then(codeSent.value = true)\r\n            codeSent.value = true\r\n            userType.value = 'patient'\r\n            checkOTP.value = false\r\n        } catch (err) {\r\n            errMsg.value = err\r\n        }\r\n    } else {\r\n        noUserFound.value = true\r\n    }\r\n}\r\nasync function getDoctor() {\r\n    await axios.post('/api/doctor/verify_username', {\r\n        username: usernameHandler.value,\r\n        email: emailHandler.value,\r\n        forgotPassword: true\r\n    }).then(response => userData.value = response.data)\r\n    if (userData.value) {\r\n        noUserFound.value = false\r\n        try {\r\n            await axios.post('/api/OTPMail', {\r\n                email: emailHandler.value\r\n            }).then(codeSent.value = true)\r\n            codeSent.value = true\r\n            userType.value = 'doctor'\r\n            checkOTP.value = false\r\n        } catch (err) {\r\n            errMsg.value = err\r\n        }\r\n    } else {\r\n        noUserFound.value = true\r\n    }\r\n}\r\nasync function getProvider() {\r\n    await axios.post('/api/manager/verify_username', {\r\n        username: usernameHandler.value,\r\n        email: emailHandler.value,\r\n        forgotPassword: true\r\n    }).then(response => userData.value = response.data)\r\n    if (userData.value) {\r\n        noUserFound.value = false\r\n        try {\r\n            await axios.post('/api/OTPMail', {\r\n                email: emailHandler.value\r\n            }).then(codeSent.value = true)\r\n            codeSent.value = true\r\n            userType.value = 'provider'\r\n            checkOTP.value = false\r\n        } catch (err) {\r\n            errMsg.value = err\r\n        }\r\n    } else {\r\n        noUserFound.value = true\r\n    }\r\n}\r\nasync function forgotPasswordOTP() {\r\n    if (usernameHandler.value != null || emailHandler.value != null) {\r\n        isLoading.value = true\r\n        let confirmEmail\r\n        await axios.post('/api/code/email', {\r\n            email: emailHandler.value\r\n        }).then(response => confirmEmail = response.data)\r\n        if (confirmEmail) {\r\n            emailExists.value = true\r\n        } else {\r\n            emailExists.value = false\r\n            checkOTP.value = true\r\n            while (checkOTP.value) {\r\n                await getPatient()\r\n                if (userData.value) break;\r\n                await getDoctor()\r\n                if (userData.value) break;\r\n                await getProvider()\r\n                if (userData.value) break;\r\n                checkOTP.value = false\r\n            }\r\n        }\r\n        isLoading.value = false\r\n    }\r\n}\r\nasync function verifyCode() {\r\n    let confirmCode\r\n    codeIncorrect.value = false\r\n    codeVerified.value = false\r\n    await axios.post('/api/code/verify', {\r\n        code: code.value\r\n    }).then(response => confirmCode = response.data)\r\n    if (confirmCode) {\r\n        codeVerified.value = true\r\n    } else {\r\n        codeIncorrect.value = true\r\n    }\r\n}\r\nasync function pushNewPassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        if (userType.value == 'patient') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/patient', {\r\n                    patientID: userData.value,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (userType.value == 'doctor') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/doctor', {\r\n                    doctorID: userData.value,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (userType.value == 'provider') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/manager', {\r\n                    managerID: userData.value,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        }\r\n    } else {\r\n        passwordNotMatch.value = true\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <a class=\"help has-text-danger\" @click=\"modal = !modal\"\r\n        v-if=\"forgotPasswordPromptCount >= forgotPasswordPromptCountLimit\">Forgot Password</a>\r\n    <div class=\"modal\" :class=\"{ 'is-active': modal }\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content has-text-left\" style=\"width: 40%; margin: auto\">\r\n            <section class=\"section box\" v-if=\"!codeSent\">\r\n                <p class=\"title is-4 has-text-danger\">Forgot Password</p>\r\n                <div class=\"notification is-danger\" v-if=\"errMsg\">{{ errMsg }}</div>\r\n                <div class=\"notification is-warning\" v-if=\"noUserFound\">No account has been found linked with this\r\n                    email.</div>\r\n                <div class=\"container\" v-if=\"!emailExists\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Username</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"usernameHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Email</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"emailHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" :class=\"{ 'is-loading': isLoading }\" @click=\"forgotPasswordOTP\"\r\n                                :disabled=\"emailHandler == null || usernameHandler == null\">Send OTP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification is-danger\" v-else>You have to wait 10 minutes before requesting a code again.\r\n                </div>\r\n            </section>\r\n            <section class=\"section box\" v-else>\r\n                <div class=\"container\" v-if=\"!codeVerified\">\r\n                    <div class=\"notification is-warning\" v-if=\"codeIncorrect\">Incorrect code, please try again.</div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter code</label>\r\n                            <input class=\"input\" type=\"number\" v-model=\"code\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" @click=\"verifyCode\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\" v-else>\r\n                    <div class=\"notification is-danger\" v-if=\"passwordNotMatch\">Passwords not match.</div>\r\n                    <div class=\"container\" v-if=\"!passwordChanged\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">New Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"newPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">Confirm Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"confirmPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <button class=\"button\" @click=\"pushNewPassword\"\r\n                                    :disabled=\"newPassword == '' && confirmPassword == ''\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"container\" v-else>\r\n                        <div class=\"notification is-success\">Your password has been successfully changed.</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" @click=\"modal = false\"></button>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .modal-content {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import script from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=572fa0ea&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-572fa0ea\"]])\n\nexport default __exports__"],"names":["isLoading","ref","errMsg","modal","emailExists","code","codeSent","codeVerified","codeIncorrect","newPassword","confirmPassword","passwordNotMatch","passwordChanged","noUserFound","checkOTP","userData","usernameHandler","props","username","emailHandler","email","userType","forgotPasswordPromptCountLimit","forgotPasswordPromptCount","computed","async","getPatient","axios","value","forgotPassword","then","response","data","err","getDoctor","getProvider","forgotPasswordOTP","confirmEmail","verifyCode","confirmCode","pushNewPassword","patientID","password","doctorID","managerID","__exports__"],"sourceRoot":""}