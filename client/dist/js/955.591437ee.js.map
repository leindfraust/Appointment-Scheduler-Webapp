{"version":3,"file":"js/955.591437ee.js","mappings":"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","sources":["webpack://client/./src/components/ForgotPassword.vue","webpack://client/./src/components/ForgotPassword.vue?4972","webpack://client/./src/components/ManagerMenu.vue","webpack://client/./src/components/ManagerMenu.vue?67dd","webpack://client/./src/views/PortalSuperUsers/ManagerSecurity.vue","webpack://client/./src/views/PortalSuperUsers/ManagerSecurity.vue?1604"],"sourcesContent":["<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport axios from 'axios';\r\n\r\nconst isLoading = ref(false)\r\nconst errMsg = ref('')\r\nconst modal = ref(false)\r\nconst emailExists = ref(false)\r\nconst code = ref('')\r\nconst codeSent = ref(false)\r\nconst codeVerified = ref(false)\r\nconst codeIncorrect = ref(false)\r\nconst newPassword = ref('')\r\nconst confirmPassword = ref('')\r\nconst passwordNotMatch = ref(false)\r\nconst passwordChanged = ref(false)\r\nconst noUserFound = ref(false)\r\nconst checkOTP = ref(false)\r\nconst userData = ref('')\r\nconst usernameHandler = ref(props.username)\r\nconst emailHandler = ref(props.email)\r\nconst userType = ref('')\r\nconst props = defineProps({\r\n    username: String,\r\n    email: String,\r\n    forgotPasswordPromptCount: {\r\n        type: Number,\r\n        default: 0\r\n    }\r\n});\r\nconst forgotPasswordPromptCountLimit = ref(2)\r\nconst forgotPasswordPromptCount = computed(() => props.forgotPasswordPromptCount)\r\n\r\nasync function getPatient() {\r\n    await axios.post('/api/user/verify_username', {\r\n        username: usernameHandler.value,\r\n        email: emailHandler.value,\r\n        forgotPassword: true\r\n    }).then(response => userData.value = response.data)\r\n    if (userData.value) {\r\n        noUserFound.value = false\r\n        try {\r\n            await axios.post('/api/OTPMail', {\r\n                email: emailHandler.value\r\n            }).then(codeSent.value = true)\r\n            codeSent.value = true\r\n            userType.value = 'patient'\r\n            checkOTP.value = false\r\n        } catch (err) {\r\n            errMsg.value = err\r\n        }\r\n    } else {\r\n        noUserFound.value = true\r\n    }\r\n}\r\nasync function getDoctor() {\r\n    await axios.post('/api/doctor/verify_username', {\r\n        username: usernameHandler.value,\r\n        email: emailHandler.value,\r\n        forgotPassword: true\r\n    }).then(response => userData.value = response.data)\r\n    if (userData.value) {\r\n        noUserFound.value = false\r\n        try {\r\n            await axios.post('/api/OTPMail', {\r\n                email: emailHandler.value\r\n            }).then(codeSent.value = true)\r\n            codeSent.value = true\r\n            userType.value = 'doctor'\r\n            checkOTP.value = false\r\n        } catch (err) {\r\n            errMsg.value = err\r\n        }\r\n    } else {\r\n        noUserFound.value = true\r\n    }\r\n}\r\nasync function getProvider() {\r\n    await axios.post('/api/manager/verify_username', {\r\n        username: usernameHandler.value,\r\n        email: emailHandler.value,\r\n        forgotPassword: true\r\n    }).then(response => userData.value = response.data)\r\n    if (userData.value) {\r\n        noUserFound.value = false\r\n        try {\r\n            await axios.post('/api/OTPMail', {\r\n                email: emailHandler.value\r\n            }).then(codeSent.value = true)\r\n            codeSent.value = true\r\n            userType.value = 'provider'\r\n            checkOTP.value = false\r\n        } catch (err) {\r\n            errMsg.value = err\r\n        }\r\n    } else {\r\n        noUserFound.value = true\r\n    }\r\n}\r\nasync function forgotPasswordOTP() {\r\n    if (usernameHandler.value != null || emailHandler.value != null) {\r\n        isLoading.value = true\r\n        let confirmEmail\r\n        await axios.post('/api/code/email', {\r\n            email: emailHandler.value\r\n        }).then(response => confirmEmail = response.data)\r\n        if (confirmEmail) {\r\n            emailExists.value = true\r\n        } else {\r\n            emailExists.value = false\r\n            checkOTP.value = true\r\n            while (checkOTP.value) {\r\n                await getPatient()\r\n                if (userData.value) break;\r\n                await getDoctor()\r\n                if (userData.value) break;\r\n                await getProvider()\r\n                if (userData.value) break;\r\n                checkOTP.value = false\r\n            }\r\n        }\r\n        isLoading.value = false\r\n    }\r\n}\r\nasync function verifyCode() {\r\n    let confirmCode\r\n    codeIncorrect.value = false\r\n    codeVerified.value = false\r\n    await axios.post('/api/code/verify', {\r\n        code: code.value\r\n    }).then(response => confirmCode = response.data)\r\n    if (confirmCode) {\r\n        codeVerified.value = true\r\n    } else {\r\n        codeIncorrect.value = true\r\n    }\r\n}\r\nasync function pushNewPassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        if (userType.value == 'patient') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/patient', {\r\n                    patientID: userData.value,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (userType.value == 'doctor') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/doctor', {\r\n                    doctorID: userData.value,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (userType.value == 'provider') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/manager', {\r\n                    managerID: userData.value,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        }\r\n    } else {\r\n        passwordNotMatch.value = true\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <a class=\"help has-text-danger\" @click=\"modal = !modal\"\r\n        v-if=\"forgotPasswordPromptCount >= forgotPasswordPromptCountLimit\">Forgot Password</a>\r\n    <div class=\"modal\" :class=\"{ 'is-active': modal }\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content has-text-left\" style=\"width: 40%; margin: auto\">\r\n            <section class=\"section box\" v-if=\"!codeSent\">\r\n                <p class=\"title is-4 has-text-danger\">Forgot Password</p>\r\n                <div class=\"notification is-danger\" v-if=\"errMsg\">{{ errMsg }}</div>\r\n                <div class=\"notification is-warning\" v-if=\"noUserFound\">No account has been found linked with this\r\n                    email.</div>\r\n                <div class=\"container\" v-if=\"!emailExists\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Username</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"usernameHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Email</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"emailHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" :class=\"{ 'is-loading': isLoading }\" @click=\"forgotPasswordOTP\"\r\n                                :disabled=\"emailHandler == null || usernameHandler == null\">Send OTP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification is-danger\" v-else>You have to wait 10 minutes before requesting a code again.\r\n                </div>\r\n            </section>\r\n            <section class=\"section box\" v-else>\r\n                <div class=\"container\" v-if=\"!codeVerified\">\r\n                    <div class=\"notification is-warning\" v-if=\"codeIncorrect\">Incorrect code, please try again.</div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter code</label>\r\n                            <input class=\"input\" type=\"number\" v-model=\"code\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" @click=\"verifyCode\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\" v-else>\r\n                    <div class=\"notification is-danger\" v-if=\"passwordNotMatch\">Passwords not match.</div>\r\n                    <div class=\"container\" v-if=\"!passwordChanged\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">New Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"newPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">Confirm Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"confirmPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <button class=\"button\" @click=\"pushNewPassword\"\r\n                                    :disabled=\"newPassword == '' && confirmPassword == ''\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"container\" v-else>\r\n                        <div class=\"notification is-success\">Your password has been successfully changed.</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" @click=\"modal = false\"></button>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .modal-content {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import script from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=572fa0ea&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-572fa0ea\"]])\n\nexport default __exports__","<template>\r\n    <nav class=\"navbar is-hidden-desktop\">\r\n        <div class=\"navbar-brand\">\r\n            <a role=\"button\" class=\"navbar-burger\" :class=\"{ 'is-active': !isActive }\" aria-label=\"menu\"\r\n                aria-expanded=\"false\" data-target=\"navbar\" @click=\"menuNav\">\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n            </a>\r\n        </div>\r\n    </nav>\r\n    <aside class=\"menu box\" :class=\"{ 'is-hidden-mobile': isActive, 'fixedMenu': isActive }\"\r\n        style=\"background-color: white; padding: 20px; height: 100vh\">\r\n        <p class=\"menu-label\">General</p>\r\n        <ul class=\"menu-list\">\r\n            <li>\r\n                <a @click=\"navDoctors\">Dashboard</a>\r\n            </li>\r\n            <li>\r\n                <a @click=\"navProfile\">Profile</a>\r\n            </li>\r\n        </ul>\r\n        <p class=\"menu-label\">Security</p>\r\n        <ul class=\"menu-list\">\r\n            <li>\r\n                <a @click=\"navChangePass\">Registration and Password</a>\r\n            </li>\r\n        </ul>\r\n        <p class=\"menu-label\">Support</p>\r\n        <ul class=\"menu-list\">\r\n            <li>\r\n                <a @click=\"this.$router.push('/contactus')\">Contact Us</a>\r\n            </li>\r\n        </ul>\r\n        <hr />\r\n        <button class=\"button is-danger\" @click=\"logout\">Logout</button>\r\n    </aside>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'ManagerMenu',\r\n    data() {\r\n        return {\r\n            isActive: true,\r\n            managerHospital: ''\r\n        }\r\n    },\r\n    async mounted() {\r\n        await axios.get('/session/manager').then(response => this.managerHospital = response.data.hospital)\r\n    },\r\n    methods: {\r\n        async logout() {\r\n            await axios.delete('/session/manager');\r\n            await this.$store.commit(\"managerHospital\", null);\r\n            await this.$router.push(\"/account/login\");\r\n        },\r\n        menuNav() {\r\n            this.isActive = !this.isActive\r\n        },\r\n        navProfile() {\r\n            this.$router.push(`/manager/${this.managerHospital}/profile`);\r\n        },\r\n        navDoctors() {\r\n            this.$router.push(`/manager/${this.managerHospital}`)\r\n        },\r\n        navChangePass() {\r\n            this.$router.push(`/manager/${this.managerHospital}/security`)\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.fixedMenu {\r\n    position: fixed;\r\n}\r\n</style>","import { render } from \"./ManagerMenu.vue?vue&type=template&id=46b80c30\"\nimport script from \"./ManagerMenu.vue?vue&type=script&lang=js\"\nexport * from \"./ManagerMenu.vue?vue&type=script&lang=js\"\n\nimport \"./ManagerMenu.vue?vue&type=style&index=0&id=46b80c30&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\r\nimport axios from 'axios'\r\nimport { ref, onMounted } from 'vue'\r\nimport ManagerMenu from '../../components/ManagerMenu.vue';\r\nimport ForgotPassword from '../../components/ForgotPassword.vue';\r\n\r\nlet currentPassword = ref('')\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet passwordNotMatched = ref(false)\r\nlet managerID = ref('')\r\nlet errMsg = ref('')\r\nlet passwordChanged = ref(false)\r\nlet incorrectCurrentPassword = ref(false)\r\nlet registrationCode = ref('')\r\n\r\nonMounted(async () => {\r\n    await axios.get('/session/manager').then(response => managerID.value = response.data._id)\r\n    await axios.get('/session/manager').then(response => registrationCode.value = response.data.registrationCode)\r\n});\r\n\r\n//methods\r\n\r\nfunction generateCode() {\r\n    let result = '';\r\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let charactersLength = characters.length;\r\n    for (let i = 0; i < 8; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() *\r\n            charactersLength));\r\n    }\r\n    registrationCode.value = result.toUpperCase()\r\n}\r\n\r\nasync function updateRegistrationCode() {\r\n    generateCode()\r\n    try {\r\n        await axios.put(`/api/manager/${managerID.value}`, {\r\n            registrationCode: registrationCode.value\r\n        });\r\n        await axios.put('/session/manager', {\r\n            registrationCode: registrationCode.value\r\n        });\r\n    } catch (err) {\r\n        errMsg.value = err\r\n    }\r\n}\r\n\r\nfunction showPassword() {\r\n    let passwordToggle = document.getElementsByClassName(\"password\");\r\n    for (let i = 0; i < passwordToggle.length; i++) {\r\n        if (passwordToggle[i].type === \"password\") {\r\n            passwordToggle[i].type = \"text\";\r\n        } else {\r\n            passwordToggle[i].type = \"password\";\r\n        }\r\n    }\r\n}\r\n\r\nasync function changePassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        await axios.put('/api/updatePassword/manager', {\r\n            managerID: managerID.value,\r\n            currentPassword: currentPassword.value,\r\n            newPassword: newPassword.value\r\n        }).then(response => {\r\n            if (response.data) {\r\n                incorrectCurrentPassword.value = false\r\n                currentPassword.value = ''\r\n                newPassword.value = ''\r\n                confirmPassword.value = ''\r\n                passwordChanged.value = true\r\n                errMsg.value = ''\r\n                passwordNotMatched.value = false\r\n            } else {\r\n                passwordChanged.value = false\r\n                incorrectCurrentPassword.value = true\r\n            }\r\n        }).catch(err => {\r\n            errMsg.value = err\r\n            passwordChanged.value = false\r\n        })\r\n    } else {\r\n        passwordNotMatched.value = true\r\n        passwordChanged.value = false\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <div class=\"columns\">\r\n        <div class=\"column is-2\">\r\n            <ManagerMenu />\r\n        </div>\r\n        <div class=\"column\">\r\n            <section class=\"section\">\r\n                <div class=\"container box\">\r\n                    <label class=\"label\">Registration Code</label>\r\n                    <div class=\"field has-addons\">\r\n                        <div class=\"control\">\r\n                            <input class=\"input\" type=\"text\" v-model=\"registrationCode\" />\r\n                        </div>\r\n                        <div class=\"control\">\r\n                            <a class=\"button\" @click=\"updateRegistrationCode\"><i\r\n                                    class=\"fa-solid fa-arrows-rotate\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"notification is-success\" v-if=\"passwordChanged\">Password has been changed successfully.\r\n                    </div>\r\n                    <div class=\"notification is-danger\" v-if=\"errMsg\"> {{ errMsg }}</div>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Current Password</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"password\" class=\"input password\" v-model=\"currentPassword\"\r\n                                placeholder=\"Current password\">\r\n                        </div>\r\n                        <p class=\"help is-danger\" v-if=\"incorrectCurrentPassword\">Current password does not match in our\r\n                            database.</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">New Password</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"password\" class=\"input password\" v-model=\"newPassword\"\r\n                                placeholder=\"New password\">\r\n                        </div>\r\n                        <p class=\"help is-danger\" v-if=\"passwordNotMatched\">Password do not match.</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label class=\"label\">Confirm Password</label>\r\n                        <div class=\"control\">\r\n                            <input type=\"password\" class=\"input password\" v-model=\"confirmPassword\"\r\n                                placeholder=\"Confirm password\">\r\n                        </div>\r\n                        <p class=\"help is-danger\" v-if=\"passwordNotMatched\">Password do not match.</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"checkbox\">\r\n                                <input type=\"checkbox\" @click=\"showPassword\" />\r\n                                Show password\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field has-text-right\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button is-danger\"\r\n                                :disabled=\"currentPassword == '' || newPassword == '' || confirmPassword == ''\"\r\n                                @click=\"changePassword\">Change password</button>\r\n                        </div>\r\n                    </div>\r\n                    <ForgotPassword :userType=\"'manager'\" />\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</template>","import script from \"./ManagerSecurity.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManagerSecurity.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["isLoading","ref","errMsg","modal","emailExists","code","codeSent","codeVerified","codeIncorrect","newPassword","confirmPassword","passwordNotMatch","passwordChanged","noUserFound","checkOTP","userData","usernameHandler","props","username","emailHandler","email","userType","forgotPasswordPromptCountLimit","forgotPasswordPromptCount","computed","async","getPatient","axios","value","forgotPassword","then","response","data","err","getDoctor","getProvider","forgotPasswordOTP","confirmEmail","verifyCode","confirmCode","pushNewPassword","patientID","password","doctorID","managerID","__exports__","class","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_1","_hoisted_2","role","_normalizeClass","$data","isActive","onClick","_cache","args","$options","menuNav","style","_hoisted_7","_hoisted_8","navDoctors","navProfile","_hoisted_9","_hoisted_10","navChangePass","_hoisted_11","_hoisted_12","$event","$router","push","_hoisted_13","logout","name","managerHospital","this","hospital","methods","$store","commit","render","currentPassword","passwordNotMatched","incorrectCurrentPassword","registrationCode","generateCode","result","characters","charactersLength","length","i","charAt","Math","floor","random","toUpperCase","updateRegistrationCode","showPassword","passwordToggle","document","getElementsByClassName","type","changePassword","catch","onMounted","_id"],"sourceRoot":""}