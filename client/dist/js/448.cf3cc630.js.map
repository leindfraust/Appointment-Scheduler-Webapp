{"version":3,"file":"js/448.cf3cc630.js","mappings":"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","sources":["webpack://client/./src/components/ForgotPassword.vue","webpack://client/./src/components/ForgotPassword.vue?4972","webpack://client/./src/views/Public/UserSecurity.vue","webpack://client/./src/views/Public/UserSecurity.vue?425c"],"sourcesContent":["<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport axios from 'axios';\r\n\r\nlet isLoading = ref(false)\r\nlet errMsg = ref('')\r\nlet modal = ref(false)\r\nlet emailExists = ref(false)\r\nlet code = ref('')\r\nlet codeSent = ref(false)\r\nlet codeVerified = ref(false)\r\nlet codeIncorrect = ref(false)\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet passwordNotMatch = ref(false)\r\nlet passwordChanged = ref(false)\r\nlet noUserFound = ref(false)\r\nlet userData = ref('')\r\nlet usernameHandler = ref(props.username)\r\nlet emailHandler = ref(props.email)\r\nconst props = defineProps({\r\n    userType: String,\r\n    username: String,\r\n    email: String,\r\n    forgotPasswordPromptCount: {\r\n        type: Number,\r\n        default: 0\r\n    }\r\n});\r\nconst forgotPasswordPromptCountLimit = ref(2)\r\nconst forgotPasswordPromptCount = computed(() => props.forgotPasswordPromptCount)\r\nasync function forgotPasswordOTP() {\r\n    if (usernameHandler.value != null || emailHandler.value != null) {\r\n        isLoading.value = true\r\n        let confirmEmail\r\n        await axios.post('/api/code/email', {\r\n            email: emailHandler.value\r\n        }).then(response => confirmEmail = response.data)\r\n        if (confirmEmail) {\r\n            emailExists.value = true\r\n        } else {\r\n            emailExists.value = false\r\n            if (props.userType == 'patient') {\r\n                await axios.post('/api/user/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'doctor') {\r\n                await axios.post('/api/doctor/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'manager') {\r\n                await axios.post('/api/manager/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            }\r\n        }\r\n        isLoading.value = false\r\n    }\r\n}\r\nasync function verifyCode() {\r\n    let confirmCode\r\n    codeIncorrect.value = false\r\n    codeVerified.value = false\r\n    await axios.post('/api/code/verify', {\r\n        code: code.value\r\n    }).then(response => confirmCode = response.data)\r\n    if (confirmCode) {\r\n        codeVerified.value = true\r\n    } else {\r\n        codeIncorrect.value = true\r\n    }\r\n}\r\nasync function pushNewPassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        if (props.userType == 'patient') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/patient', {\r\n                    patientID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'doctor') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/doctor', {\r\n                    doctorID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'manager') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/manager', {\r\n                    managerID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        }\r\n    } else {\r\n        passwordNotMatch.value = true\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <a class=\"help has-text-danger\" @click=\"modal = !modal\"\r\n        v-if=\"forgotPasswordPromptCount >= forgotPasswordPromptCountLimit\">Forgot Password</a>\r\n    <div class=\"modal\" :class=\"{ 'is-active': modal }\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content has-text-left\" style=\"width: 40%; margin: auto\">\r\n            <section class=\"section box\" v-if=\"!codeSent\">\r\n                <p class=\"title is-4 has-text-danger\">Forgot Password</p>\r\n                <div class=\"notification is-danger\" v-if=\"errMsg\">{{ errMsg }}</div>\r\n                <div class=\"notification is-warning\" v-if=\"noUserFound\">No account has been found linked with this\r\n                    email.</div>\r\n                <div class=\"container\" v-if=\"!emailExists\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Username</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"usernameHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Email</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"emailHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" :class=\"{ 'is-loading': isLoading }\" @click=\"forgotPasswordOTP\"\r\n                                :disabled=\"emailHandler == null || usernameHandler == null\">Send OTP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification is-danger\" v-else>You have to wait 10 minutes before requesting a code again.\r\n                </div>\r\n            </section>\r\n            <section class=\"section box\" v-else>\r\n                <div class=\"container\" v-if=\"!codeVerified\">\r\n                    <div class=\"notification is-warning\" v-if=\"codeIncorrect\">Incorrect code, please try again.</div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter code</label>\r\n                            <input class=\"input\" type=\"number\" v-model=\"code\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" @click=\"verifyCode\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\" v-else>\r\n                    <div class=\"notification is-danger\" v-if=\"passwordNotMatch\">Passwords not match.</div>\r\n                    <div class=\"container\" v-if=\"!passwordChanged\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">New Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"newPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">Confirm Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"confirmPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <button class=\"button\" @click=\"pushNewPassword\"\r\n                                    :disabled=\"newPassword == '' && confirmPassword == ''\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"container\" v-else>\r\n                        <div class=\"notification is-success\">Your password has been successfully changed.</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" @click=\"modal = false\"></button>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .modal-content {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import script from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=3decfc24&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3decfc24\"]])\n\nexport default __exports__","<script setup>\r\nimport Navigation from '../../components/NavigationTab.vue';\r\nimport axios from 'axios'\r\nimport { ref, onMounted } from 'vue';\r\nimport ForgotPassword from '../../components/ForgotPassword.vue';\r\n\r\nlet patient = ref([])\r\nlet currentPassword = ref('')\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet errMsg = ref('')\r\nlet passwordChanged = ref(false)\r\nlet newPasswordNotMatch = ref(false)\r\nlet currentPasswordIncorrect = ref(false)\r\nlet username = ref('')\r\nlet email = ref('')\r\nonMounted(async () => {\r\n    await axios.get('/session/patient').then(response => patient.value = response.data);\r\n    username.value = await patient.value.username\r\n    email.value = await patient.value.email\r\n})\r\n\r\n//methods\r\n\r\nfunction showPassword() {\r\n    let passwordToggle = document.getElementsByClassName(\"password\");\r\n    for (let i = 0; i < passwordToggle.length; i++) {\r\n        if (passwordToggle[i].type === \"password\") {\r\n            passwordToggle[i].type = \"text\";\r\n        } else {\r\n            passwordToggle[i].type = \"password\";\r\n        }\r\n    }\r\n}\r\nasync function changePassword() {\r\n    if (currentPassword.value !== '' && newPassword.value !== '') {\r\n        if (newPassword.value !== confirmPassword.value) {\r\n            newPasswordNotMatch.value = true\r\n        } else {\r\n            newPasswordNotMatch.value = false\r\n        }\r\n    } else {\r\n        if (newPassword.value !== confirmPassword.value) {\r\n            newPasswordNotMatch.value = true\r\n        } else {\r\n            newPasswordNotMatch.value = false\r\n        }\r\n    }\r\n\r\n    if (!newPasswordNotMatch.value) {\r\n        try {\r\n            await axios.put('/api/updatePassword/patient', {\r\n                patientID: patient.value._id,\r\n                currentPassword: currentPassword.value,\r\n                newPassword: newPassword.value\r\n            }).then(response => {\r\n                if (response.data) {\r\n                    currentPassword.value = ''\r\n                    newPassword.value = ''\r\n                    confirmPassword.value = ''\r\n                    passwordChanged.value = true\r\n                    errMsg.value = ''\r\n                } else {\r\n                    passwordChanged.value = false\r\n                    currentPasswordIncorrect.value = true\r\n                }\r\n            });\r\n        } catch (err) {\r\n            errMsg.value = err\r\n            passwordChanged.value = false\r\n        }\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <Navigation />\r\n\r\n    <section class=\"hero is-info is-fullheight\">\r\n        <div class=\"hero-body\">\r\n            <div class=\"container\">\r\n                <div class=\"box\">\r\n                    <div class=\"notification is-danger\" v-if=\"errMsg\">Oops, something went wrong. Try again later or\r\n                        <router-link :to=\"'/contactus'\">contact us</router-link>\r\n                    </div>\r\n                    <div class=\"notification is-success\" v-if=\"passwordChanged\">Password changed successfully.</div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Current Password:</label>\r\n                            <input class=\"input password is-rounded\" v-model=\"currentPassword\" type=\"password\"\r\n                                placeholder=\"Current password\" />\r\n                            <p class=\"help is-danger\" v-if=\"currentPasswordIncorrect\">Current password is incorrect.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">New Password:</label>\r\n                            <input class=\"input password is-rounded\" v-model=\"newPassword\" type=\"password\"\r\n                                placeholder=\"New password\" />\r\n                        </div>\r\n                        <p class=\"help is-danger\" v-if=\"newPasswordNotMatch\">Password do not match.</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Confirm Password:</label>\r\n                            <input class=\"input password is-rounded\" v-model=\"confirmPassword\" type=\"password\"\r\n                                placeholder=\"Confirm password\" />\r\n                        </div>\r\n                        <p class=\"help is-danger\" v-if=\"newPasswordNotMatch\">Password do not match.</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"checkbox\">\r\n                                <input type=\"checkbox\" @click=\"showPassword\" />\r\n                                Show password\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field has-text-right\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button is-danger\" @click=\"changePassword\"\r\n                                :disabled=\"currentPassword === '' || newPassword === '' || confirmPassword === ''\">Change\r\n                                password</button>\r\n                        </div>\r\n                    </div>\r\n                    <ForgotPassword v-if=\"username != '' && email != ''\" :userType=\"'patient'\" :username=\"username\"\r\n                        :email=\"email\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .box {\r\n        width: 100% !important;\r\n    }\r\n}\r\n\r\n.hero {\r\n    background: center center no-repeat url('../../assets/images/background-client-security.png');\r\n    background-size: cover;\r\n}\r\n\r\n.box {\r\n    width: 35%;\r\n    margin: auto;\r\n    padding: 30px\r\n}\r\n</style>","import script from \"./UserSecurity.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserSecurity.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserSecurity.vue?vue&type=style&index=0&id=7d5b71be&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d5b71be\"]])\n\nexport default __exports__"],"names":["isLoading","ref","errMsg","modal","emailExists","code","codeSent","codeVerified","codeIncorrect","newPassword","confirmPassword","passwordNotMatch","passwordChanged","noUserFound","userData","usernameHandler","props","username","emailHandler","email","forgotPasswordPromptCountLimit","forgotPasswordPromptCount","computed","async","forgotPasswordOTP","value","confirmEmail","axios","then","response","data","userType","err","verifyCode","confirmCode","pushNewPassword","patientID","_id","password","doctorID","managerID","__exports__","patient","currentPassword","newPasswordNotMatch","currentPasswordIncorrect","showPassword","passwordToggle","document","getElementsByClassName","i","length","type","changePassword","onMounted"],"sourceRoot":""}