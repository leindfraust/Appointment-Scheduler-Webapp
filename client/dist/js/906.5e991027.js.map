{"version":3,"file":"js/906.5e991027.js","mappings":"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","sources":["webpack://client/./src/components/ForgotPassword.vue","webpack://client/./src/components/ForgotPassword.vue?4972","webpack://client/./src/views/PortalDoctor/DoctorLogin.vue","webpack://client/./src/views/PortalDoctor/DoctorLogin.vue?9f08"],"sourcesContent":["<script setup>\r\nimport { ref, computed } from 'vue'\r\nimport axios from 'axios';\r\n\r\nlet isLoading = ref(false)\r\nlet errMsg = ref('')\r\nlet modal = ref(false)\r\nlet emailExists = ref(false)\r\nlet code = ref('')\r\nlet codeSent = ref(false)\r\nlet codeVerified = ref(false)\r\nlet codeIncorrect = ref(false)\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet passwordNotMatch = ref(false)\r\nlet passwordChanged = ref(false)\r\nlet noUserFound = ref(false)\r\nlet userData = ref('')\r\nlet usernameHandler = ref(props.username)\r\nlet emailHandler = ref(props.email)\r\nconst props = defineProps({\r\n    userType: String,\r\n    username: String,\r\n    email: String,\r\n    forgotPasswordPromptCount: {\r\n        type: Number,\r\n        default: 0\r\n    }\r\n});\r\nconst forgotPasswordPromptCountLimit = ref(2)\r\nconst forgotPasswordPromptCount = computed(() => props.forgotPasswordPromptCount)\r\nasync function forgotPasswordOTP() {\r\n    if (usernameHandler.value != null || emailHandler.value != null) {\r\n        isLoading.value = true\r\n        let confirmEmail\r\n        await axios.post('/api/code/email', {\r\n            email: emailHandler.value\r\n        }).then(response => confirmEmail = response.data)\r\n        if (confirmEmail) {\r\n            emailExists.value = true\r\n        } else {\r\n            emailExists.value = false\r\n            if (props.userType == 'patient') {\r\n                await axios.post('/api/user/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'doctor') {\r\n                await axios.post('/api/doctor/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'manager') {\r\n                await axios.post('/api/manager/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            }\r\n        }\r\n        isLoading.value = false\r\n    }\r\n}\r\nasync function verifyCode() {\r\n    let confirmCode\r\n    codeIncorrect.value = false\r\n    codeVerified.value = false\r\n    await axios.post('/api/code/verify', {\r\n        code: code.value\r\n    }).then(response => confirmCode = response.data)\r\n    if (confirmCode) {\r\n        codeVerified.value = true\r\n    } else {\r\n        codeIncorrect.value = true\r\n    }\r\n}\r\nasync function pushNewPassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        if (props.userType == 'patient') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/patient', {\r\n                    patientID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'doctor') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/doctor', {\r\n                    doctorID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'manager') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/manager', {\r\n                    managerID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        }\r\n    } else {\r\n        passwordNotMatch.value = true\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <a class=\"help has-text-danger\" @click=\"modal = !modal\"\r\n        v-if=\"forgotPasswordPromptCount >= forgotPasswordPromptCountLimit\">Forgot Password</a>\r\n    <div class=\"modal\" :class=\"{ 'is-active': modal }\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content has-text-left\" style=\"width: 40%; margin: auto\">\r\n            <section class=\"section box\" v-if=\"!codeSent\">\r\n                <p class=\"title is-4 has-text-danger\">Forgot Password</p>\r\n                <div class=\"notification is-danger\" v-if=\"errMsg\">{{ errMsg }}</div>\r\n                <div class=\"notification is-warning\" v-if=\"noUserFound\">No account has been found linked with this\r\n                    email.</div>\r\n                <div class=\"container\" v-if=\"!emailExists\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Username</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"usernameHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Email</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"emailHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" :class=\"{ 'is-loading': isLoading }\" @click=\"forgotPasswordOTP\"\r\n                                :disabled=\"emailHandler == null || usernameHandler == null\">Send OTP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification is-danger\" v-else>You have to wait 10 minutes before requesting a code again.\r\n                </div>\r\n            </section>\r\n            <section class=\"section box\" v-else>\r\n                <div class=\"container\" v-if=\"!codeVerified\">\r\n                    <div class=\"notification is-warning\" v-if=\"codeIncorrect\">Incorrect code, please try again.</div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter code</label>\r\n                            <input class=\"input\" type=\"number\" v-model=\"code\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" @click=\"verifyCode\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\" v-else>\r\n                    <div class=\"notification is-danger\" v-if=\"passwordNotMatch\">Passwords not match.</div>\r\n                    <div class=\"container\" v-if=\"!passwordChanged\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">New Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"newPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">Confirm Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"confirmPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <button class=\"button\" @click=\"pushNewPassword\"\r\n                                    :disabled=\"newPassword == '' && confirmPassword == ''\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"container\" v-else>\r\n                        <div class=\"notification is-success\">Your password has been successfully changed.</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" @click=\"modal = false\"></button>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .modal-content {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import script from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=3decfc24&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3decfc24\"]])\n\nexport default __exports__","<template>\r\n  <section class=\"hero is-fullheight\">\r\n    <div class=\"hero-body animate__animated animate__fadeInLeft\">\r\n      <div class=\"box has-text-centered\" style=\"margin: auto\">\r\n        <div class=\"container is-fluid\" style=\"width: 100%; margin: auto\">\r\n          <form style=\"margin-top: 5%\">\r\n            <div class=\"field\">\r\n              <h1 class=\"title has-text-link has-text-left\">Nice to see you Doc.</h1>\r\n              <div class=\"control\">\r\n                <input class=\"input is-rounded\" type=\"text\" v-model=\"username\" placeholder=\"username\"\r\n                  @keyup.enter=\"login\" required />\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <div class=\"control\" style=\"margin-top: 2%\">\r\n                <input class=\"input is-rounded\" type=\"password\" v-model=\"password\" placeholder=\"password\"\r\n                  @keyup.enter=\"login\" required />\r\n              </div>\r\n            </div>\r\n            <p v-if=\"incorrectUserPass\" class=\"has-text-danger\" style=\"margin-top: 5%\">{{ validateMessage }}</p>\r\n            <p v-else-if=\"incorrectUserPass == false\" class=\"has-text-danger\" style=\"margin-top: 5%\">{{ validateMessage\r\n            }}</p>\r\n            <button type=\"button\" class=\"button is-rounded is-link\" @click=\"login\">Login</button>\r\n            <hr />\r\n            <a @click=\"signup\" class=\"is-danger\">Create an account</a>\r\n          </form>\r\n        </div>\r\n        <ForgotPassword :userType=\"'doctor'\" :forgotPasswordPromptCount=\"forgotPasswordCount\" />\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport ForgotPassword from \"../../components/ForgotPassword.vue\";\r\nexport default {\r\n  name: \"LoginDoctor\",\r\n  component: ForgotPassword,\r\n  data() {\r\n    return {\r\n      username: null,\r\n      password: null,\r\n      userDoctor: null,\r\n      incorrectUserPass: Boolean,\r\n      validateMessage: \"\",\r\n      specializations: null,\r\n      forgotPasswordCount: 0\r\n    };\r\n  },\r\n  async beforeCreate() {\r\n    await axios.get(\"/session/doctor\").then(async response => {\r\n      if (typeof response.data.alias !== 'undefined') {\r\n        this.$store.commit(\"alias\", response.data.alias);\r\n        this.$store.commit(\"doctorID\", response.data._id);\r\n        this.$store.commit(\"doctorName\", response.data.fullname);\r\n        await this.$router.push(`/doctor/${this.$store.state.alias}/appointments`);\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    async login() {\r\n      if (this.username == null || this.password == null) {\r\n        this.incorrectUserPass = false;\r\n        this.validateMessage = \"empty username or password\";\r\n        this.username = null\r\n        this.password = null\r\n      } else {\r\n        await axios\r\n          .post(\"/api/auth/doctor\", {\r\n            username: this.username,\r\n            password: this.password\r\n          })\r\n          .then(\r\n            async (response) => {\r\n              this.userDoctor = await response.data\r\n              // if username and password matched to a user\r\n              if (await this.userDoctor) {\r\n                await axios.post(\"/session/doctor\", {\r\n                  verified: this.userDoctor.verified,\r\n                  _id: this.userDoctor._id,\r\n                  licenseNo: this.userDoctor.licenseNo,\r\n                  alias: this.userDoctor.alias,\r\n                  fullname: this.userDoctor.name,\r\n                  specialist: this.userDoctor.specialist,\r\n                  gmail: this.userDoctor.gmail,\r\n                  hospitalOrigin: this.userDoctor.hospitalOrigin,\r\n                  schedule: this.userDoctor.schedule,\r\n                  username: this.userDoctor.username,\r\n                  messageHistory: this.userDoctor.messageHistory,\r\n                  appointmentCategories: this.userDoctor.appointmentCategories,\r\n                  paymentMethods: this.userDoctor.paymentMethods\r\n                });\r\n                this.$store.commit(\"alias\", this.userDoctor.alias);\r\n                this.$store.commit(\"doctorID\", this.userDoctor._id);\r\n                this.$store.commit(\"doctorName\", this.userDoctor.name);\r\n                await this.$router.push(`/doctor/${this.userDoctor.alias}/appointments`);\r\n              }\r\n              else {\r\n                this.forgotPasswordCount = this.forgotPasswordCount + 1\r\n                this.validateMessage = \"Incorrect username or password\";\r\n                this.incorrectUserPass = true;\r\n                this.username = null;\r\n                this.password = null;\r\n              }\r\n            }\r\n          );\r\n      }\r\n    },\r\n    async signup() {\r\n      await this.$router.push(\"/doctor/signup\");\r\n    },\r\n  },\r\n  components: { ForgotPassword }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.hero {\r\n  background: linear-gradient(105.07deg, #FFFFFF 0%, #DAE6FE 51.43%, #FFFFFF 99.75%);\r\n}\r\n\r\n@media (max-width: 991.98px) {\r\n  .customField {\r\n    width: 100% !important;\r\n  }\r\n\r\n  .card {\r\n    width: 100% !important;\r\n  }\r\n}\r\n</style>","import { render } from \"./DoctorLogin.vue?vue&type=template&id=8e58cb14&scoped=true\"\nimport script from \"./DoctorLogin.vue?vue&type=script&lang=js\"\nexport * from \"./DoctorLogin.vue?vue&type=script&lang=js\"\n\nimport \"./DoctorLogin.vue?vue&type=style&index=0&id=8e58cb14&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8e58cb14\"]])\n\nexport default __exports__"],"names":["isLoading","ref","errMsg","modal","emailExists","code","codeSent","codeVerified","codeIncorrect","newPassword","confirmPassword","passwordNotMatch","passwordChanged","noUserFound","userData","usernameHandler","props","username","emailHandler","email","forgotPasswordPromptCountLimit","forgotPasswordPromptCount","computed","async","forgotPasswordOTP","value","confirmEmail","axios","then","response","data","userType","err","verifyCode","confirmCode","pushNewPassword","patientID","_id","password","doctorID","managerID","__exports__","class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","type","$data","placeholder","onKeyup","$options","required","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","onClick","_hoisted_13","_createVNode","_component_ForgotPassword","name","component","ForgotPassword","userDoctor","incorrectUserPass","Boolean","validateMessage","specializations","forgotPasswordCount","alias","this","$store","commit","fullname","$router","push","state","methods","verified","licenseNo","specialist","gmail","hospitalOrigin","schedule","messageHistory","appointmentCategories","paymentMethods","components","render"],"sourceRoot":""}