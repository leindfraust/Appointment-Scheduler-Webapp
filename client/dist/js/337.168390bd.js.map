{"version":3,"file":"js/337.168390bd.js","mappings":"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","sources":["webpack://client/./src/components/ForgotPassword.vue","webpack://client/./src/components/ForgotPassword.vue?4972","webpack://client/./src/views/Public/UserLogin.vue","webpack://client/./src/views/Public/UserLogin.vue?70bb"],"sourcesContent":["<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios';\r\n\r\nlet isLoading = ref(false)\r\nlet errMsg = ref('')\r\nlet modal = ref(false)\r\nlet emailExists = ref(false)\r\nlet code = ref('')\r\nlet codeSent = ref(false)\r\nlet codeVerified = ref(false)\r\nlet newPassword = ref('')\r\nlet confirmPassword = ref('')\r\nlet passwordNotMatch = ref(false)\r\nlet passwordChanged = ref(false)\r\nlet noUserFound = ref(false)\r\nlet userData = ref('')\r\nlet usernameHandler = ref(props.username)\r\nlet emailHandler = ref(props.email)\r\nconst props = defineProps({\r\n    userType: String,\r\n    username: String,\r\n    email: String\r\n});\r\n\r\nasync function forgotPasswordOTP() {\r\n    if (usernameHandler.value != null || emailHandler.value != null) {\r\n        isLoading.value = true\r\n        let confirmEmail\r\n        await axios.post('/api/code/email', {\r\n            email: emailHandler.value\r\n        }).then(response => confirmEmail = response.data)\r\n        if (confirmEmail) {\r\n            emailExists.value = true\r\n        } else {\r\n            emailExists.value = false\r\n            if (props.userType == 'patient') {\r\n                await axios.post('/api/user/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'doctor') {\r\n                await axios.post('/api/doctor/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            } else if (props.userType == 'manager') {\r\n                await axios.post('/api/manager/verify_username', {\r\n                    username: usernameHandler.value,\r\n                    email: emailHandler.value\r\n                }).then(response => userData.value = response.data)\r\n                if (userData.value) {\r\n                    noUserFound.value = false\r\n                    try {\r\n                        await axios.post('/api/OTPMail', {\r\n                            email: emailHandler.value\r\n                        }).then(codeSent.value = true)\r\n                        codeSent.value = true\r\n                    } catch (err) {\r\n                        errMsg.value = err\r\n                    }\r\n                } else {\r\n                    noUserFound.value = true\r\n                }\r\n            }\r\n        }\r\n        isLoading.value = false\r\n    }\r\n}\r\nasync function verifyCode() {\r\n    let confirmCode\r\n    codeVerified.value = false\r\n    await axios.post('/api/code/verify', {\r\n        code: code.value\r\n    }).then(response => confirmCode = response.data)\r\n    if (confirmCode) {\r\n        codeVerified.value = true\r\n    }\r\n}\r\nasync function pushNewPassword() {\r\n    if (newPassword.value === confirmPassword.value) {\r\n        if (props.userType == 'patient') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/patient', {\r\n                    patientID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'doctor') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/doctor', {\r\n                    doctorID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        } else if (props.userType == 'manager') {\r\n            try {\r\n                await axios.put('/api/fupdatePassword/manager', {\r\n                    managerID: userData.value._id,\r\n                    password: newPassword.value\r\n                });\r\n                userData.value = ''\r\n                passwordChanged.value = true\r\n            } catch (err) {\r\n                passwordChanged.value = false\r\n                errMsg.value = err\r\n                userData.value = ''\r\n            }\r\n        }\r\n    } else {\r\n        passwordNotMatch.value = true\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <a class=\"subtitle has-text-danger\" @click=\"modal = !modal\">Forgot Password</a>\r\n    <div class=\"modal\" :class=\"{ 'is-active': modal }\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content has-text-left\" style=\"width: 40%; margin: auto\">\r\n            <section class=\"section box\" v-if=\"!codeSent\">\r\n                <p class=\"title is-4 has-text-danger\">Forgot Password</p>\r\n                <div class=\"notification is-danger\" v-if=\"errMsg\">{{ errMsg }}</div>\r\n                <div class=\"notification is-warning\" v-if=\"noUserFound\">No account has been found linked with this\r\n                    email.</div>\r\n                <div class=\"container\" v-if=\"!emailExists\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Username</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"usernameHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter Email</label>\r\n                            <input class=\"input\" type=\"email\" v-model=\"emailHandler\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" :class=\"{ 'is-loading': isLoading }\" @click=\"forgotPasswordOTP\"\r\n                                :disabled=\"emailHandler == null || usernameHandler == null\">Send OTP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification is-danger\" v-else>You have to wait 10 minutes before requesting a code again.\r\n                </div>\r\n            </section>\r\n            <section class=\"section box\" v-else>\r\n                <div class=\"container\" v-if=\"!codeVerified\">\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <label class=\"label\">Enter code</label>\r\n                            <input class=\"input\" type=\"number\" v-model=\"code\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button class=\"button\" @click=\"verifyCode\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\" v-else>\r\n                    <div class=\"notification is-danger\" v-if=\"passwordNotMatch\">Passwords not match.</div>\r\n                    <div class=\"container\" v-if=\"!passwordChanged\">\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">New Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"newPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <label class=\"label\">Confirm Password:</label>\r\n                                <input class=\"input\" type=\"password\" v-model=\"confirmPassword\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <div class=\"control\">\r\n                                <button class=\"button\" @click=\"pushNewPassword\"\r\n                                    :disabled=\"newPassword == '' && confirmPassword == ''\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"container\" v-else>\r\n                        <div class=\"notification is-success\">Your password has been successfully changed.</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" @click=\"modal = false\"></button>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n@media (max-width: 991.98px) {\r\n    .modal-content {\r\n        width: 100% !important;\r\n    }\r\n}\r\n</style>","import script from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ForgotPassword.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ForgotPassword.vue?vue&type=style&index=0&id=c2f9401e&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c2f9401e\"]])\n\nexport default __exports__","<template>\r\n  <section class=\"hero is-fullheight\">\r\n    <div class=\"hero-body\">\r\n      <div class=\"container\">\r\n        <div class=\"container has-text-centered animate__animated animate__fadeInLeft\">\r\n          <div class=\"box\" style=\"width: 35%; margin: auto\">\r\n            <div class=\"notification is-success\" v-if=\"newAccount\">Your account has been successfully created.</div>\r\n            <!--<div class=\"notification is-info has-text-left\">\r\n              Are you one of our doctors? Click\r\n              <a href=\"/doctor/login\">here</a>.\r\n            </div> -->\r\n            <br />\r\n            <h1 class=\"title has-text-info has-text-centered\">MEDIC SEARCH</h1>\r\n            <div class=\"field\">\r\n              <div class=\"control\">\r\n                <input class=\"input is-rounded\" type=\"text\" v-model=\"username\" placeholder=\"username\" @keyup.enter=\"login\"\r\n                  required />\r\n              </div>\r\n              <div class=\"control\" style=\"margin-top: 2%\">\r\n                <input class=\"input is-rounded\" type=\"password\" v-model=\"password\" placeholder=\"password\" @keyup.enter=\"login\"\r\n                  required />\r\n              </div>\r\n              <h1 v-if=\"incorrectUserPass\" class=\"subtitle has-text-danger\">{{ validateMessage }}</h1>\r\n              <h1 v-else-if=\"incorrectUserPass == false\" class=\"subtitle has-text-danger\">{{ validateMessage }}</h1>\r\n              <button type=\"button\" class=\"button is-info is-rounded\" @click=\"login\">Login</button>\r\n              <br />\r\n              <br />\r\n              <h1 class=\"subtitle\">OR</h1>\r\n              <a href=\"/user/signup\">Create an account</a>\r\n            </div>\r\n            <ForgotPassword :userType=\"'patient'\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport store from '../../store'\r\nimport ForgotPassword from '../../components/ForgotPassword.vue'\r\n\r\nexport default {\r\n  username: \"UserLogin\",\r\n  components: {\r\n    ForgotPassword\r\n  },\r\n  data() {\r\n    return {\r\n      username: null,\r\n      password: null,\r\n      userPatient: null,\r\n      validateMessage: null,\r\n      incorrectUserPass: Boolean,\r\n      newAccount: false\r\n    }\r\n  },\r\n  async mounted() {\r\n    if (this.$store.state.accountCreated == true) {\r\n      this.newAccount = true\r\n      await this.$store.commit('accountCreated', false)\r\n    }\r\n    if (this.$store.state.patientUsername !== null && this.$store.state.patientID !== null) {\r\n      await this.$router.push(`/user/${this.$store.state.patientUsername}`);\r\n    }\r\n  },\r\n  methods: {\r\n    async login() {\r\n      if (this.username == null || this.password == null) {\r\n        this.incorrectUserPass = false;\r\n        this.validateMessage = \"empty username or password\";\r\n        this.username = null\r\n        this.password = null\r\n      } else {\r\n        await axios\r\n          .post(\"/api/auth/patient\", {\r\n            username: this.username,\r\n            password: this.password\r\n          })\r\n          .then(\r\n            async (response) => {\r\n              this.userPatient = response.data\r\n              // if username and password matched to a user\r\n              if (await this.userPatient) {\r\n                await axios.post(\"/session/patient\", {\r\n                  _id: this.userPatient._id,\r\n                  name: this.userPatient.name,\r\n                  email: this.userPatient.gmail,\r\n                  username: this.username,\r\n                  province: this.userPatient.province,\r\n                  city: this.userPatient.city,\r\n                  currentAddress: this.userPatient.currentAddress\r\n                });\r\n                store.commit(\"patientUsername\", this.userPatient.username)\r\n                store.commit(\"patientID\", this.userPatient._id)\r\n                await this.$router.push(`/user/${this.userPatient.username}`);\r\n              } else {\r\n                this.validateMessage = \"Incorrect username or password\";\r\n                this.incorrectUserPass = true;\r\n                this.username = null;\r\n                this.password = null;\r\n              }\r\n            }\r\n          );\r\n      }\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.hero {\r\n  background: no-repeat center url('../../assets/images/background-login.png');\r\n  background-size: cover;\r\n}\r\n\r\n@media (max-width: 991.98px) {\r\n  .box {\r\n    width: 100% !important;\r\n  }\r\n}\r\n</style>","import { render } from \"./UserLogin.vue?vue&type=template&id=2a628776&scoped=true\"\nimport script from \"./UserLogin.vue?vue&type=script&lang=js\"\nexport * from \"./UserLogin.vue?vue&type=script&lang=js\"\n\nimport \"./UserLogin.vue?vue&type=style&index=0&id=2a628776&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\ronan\\\\Documents\\\\Projects\\\\Appointment-Scheduler-Webapp\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2a628776\"]])\n\nexport default __exports__"],"names":["isLoading","ref","errMsg","modal","emailExists","code","codeSent","codeVerified","newPassword","confirmPassword","passwordNotMatch","passwordChanged","noUserFound","userData","usernameHandler","props","username","emailHandler","email","async","forgotPasswordOTP","value","confirmEmail","axios","then","response","data","userType","err","verifyCode","confirmCode","pushNewPassword","patientID","_id","password","doctorID","managerID","__exports__","class","style","_createElementVNode","href","_createElementBlock","$data","_hoisted_7","_hoisted_8","type","$event","placeholder","onKeyup","$options","required","_toDisplayString","onClick","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_createVNode","_component_ForgotPassword","components","ForgotPassword","userPatient","validateMessage","incorrectUserPass","Boolean","newAccount","this","$store","state","accountCreated","commit","patientUsername","$router","push","methods","name","gmail","province","city","currentAddress","store","render"],"sourceRoot":""}